{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "agentpool1Count": {
      "value": 3
    },
    "agentpool1Subnet": {
      "value": "10.240.0.0/12"
    },
    "agentpool1VMSize": {
      "value": "Standard_D2_v2"
    },
    "agentpool1osImageOffer": {
      "value": "UbuntuServer"
    },
    "agentpool1osImagePublisher": {
      "value": "Canonical"
    },
    "agentpool1osImageSKU": {
      "value": "16.04-LTS"
    },
    "agentpool1osImageVersion": {
      "value": "16.04.201801260"
    },
    "apiServerCertificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSU5CVENDQ3UyZ0F3SUJBZ0lSQVBJajJnZTJaYWlwUm8zZjYwWTlGWDh3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ERTVNVGMwTnpJd1doY05NakF3TkRFNE1UYzBOekl3V2pBVQpNUkl3RUFZRFZRUURFd2xoY0dselpYSjJaWEl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLCkFvSUNBUURGSCtiTFVYTUxyZU92Z3VpQ3VlTVFLLzVEZWV3TFNpSEU2T2U0RDZIanFkczVSNjh6cnhQR21BWWMKdS9yTmNxZzZEOFVaOGg2em1NNmxzVlNIbnVpVTA1d3N5UVNJTy9HYkR4WlRFdTIwL2JJN3prWGVoYmJrZ0dXawpsSG5wS2o4OTZrbmRxVXI5ZWczdWpTYitUd29uZ1NNL0UvdElzdzdJU2JoTllYbGZnSVArM1RwbVcrNGlpd2UxCmZkbWVrV3oxdXpMdkJNMjd2eGVYSmN0bkpjTnJLRnlHYWRHaEFiTDFmdHVFeTF3aS9GYWNLakwrMFl2TVZNcDcKbHFMQU9BL0Z1YmplS2FtVDlqSXY3MFduNkYraVBlY1JTZDVnNGxFTWxMNlFGUEpJb2lwZjNGSllnY1BkT3ZacwpZa1ZMYU5nUE9OTWJ2RDZzNjgvT2ZsSXg1Z2lsd3IrV3Fla0xqekkvcE5YLzR2WTJXNkZCQjg3bFFabWtNT2tlCkh1Vy9MYXlPQy9SY1c0dFlERlg0Wi9vaWFQaWoyN08wVDhsVEx1RlY3TXhzLzRhb2I5cW9oK1E0ZEo4NVJyVkEKcEsyeVVmUzFCQkNJOFdPZkpCcC9PUzQrTlZoMGJNSU5nQ1Z1cjZ3YXRvUzgzd2FMKytDYTVQNXhBZDlOTGRKcApEc25PUWpZd3pIcHJuUDQ5N2x4bzZrcEV2ZGdyOEV3WEp3WlZiQUZVaUVZTFk4VlF4NTh4aCt2WWYwL0V1RzRKCllNK0cxN1l1clBSeU5pSXF1RXYwNEE3UkI0Zm8zUWhTVHRacDNkZW9zcDZUNzgxUHFYVlE4bS9IbU41SGZtTW8KUTZiQ0tad2pVQUs2bkZpYUpkWnZJN2Y1T0RWN01PeXdoQWVBNUU5QUgvMzAvZDhRYlFJREFRQUJvNElJVnpDQwpDRk13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCCi93UUNNQUF3Z2dnY0JnTlZIUkVFZ2dnVE1JSUlENEl1WVhKamFHbDBaV05vTFdzNGN5NWhkWE4wY21Gc2FXRmwKWVhOMExtTnNiM1ZrWVhCd0xtRjZkWEpsTG1OdmJZSXpZWEpqYUdsMFpXTm9MV3M0Y3k1aGRYTjBjbUZzYVdGegpiM1YwYUdWaGMzUXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXhoY21Ob2FYUmxZMmd0YXpoekxtSnlZWHBwCmJITnZkWFJvTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJdVlYSmphR2wwWldOb0xXczRjeTVqWVc1aFpHRmoKWlc1MGNtRnNMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUlyWVhKamFHbDBaV05vTFdzNGN5NWpZVzVoWkdGbApZWE4wTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJdFlYSmphR2wwWldOb0xXczRjeTVqWlc1MGNtRnNhVzVrCmFXRXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXBoY21Ob2FYUmxZMmd0YXpoekxtTmxiblJ5WVd4MWN5NWoKYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDTG1GeVkyaHBkR1ZqYUMxck9ITXVZMlZ1ZEhKaGJIVnpaWFZoY0M1agpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNNV0Z5WTJocGRHVmphQzFyT0hNdVkyaHBibUZsWVhOMExtTnNiM1ZrCllYQndMbU5vYVc1aFkyeHZkV1JoY0drdVkyNkNNbUZ5WTJocGRHVmphQzFyT0hNdVkyaHBibUZ1YjNKMGFDNWoKYkc5MVpHRndjQzVqYUdsdVlXTnNiM1ZrWVhCcExtTnVnaWxoY21Ob2FYUmxZMmd0YXpoekxtVmhjM1JoYzJsaApMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUluWVhKamFHbDBaV05vTFdzNGN5NWxZWE4wZFhNdVkyeHZkV1JoCmNIQXVZWHAxY21VdVkyOXRnaWhoY21Ob2FYUmxZMmd0YXpoekxtVmhjM1IxY3pJdVkyeHZkV1JoY0hBdVlYcDEKY21VdVkyOXRnaXhoY21Ob2FYUmxZMmd0YXpoekxtVmhjM1IxY3pKbGRXRndMbU5zYjNWa1lYQndMbUY2ZFhKbApMbU52YllJcVlYSmphR2wwWldOb0xXczRjeTVxWVhCaGJtVmhjM1F1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0CmdpcGhjbU5vYVhSbFkyZ3Rhemh6TG1waGNHRnVkMlZ6ZEM1amJHOTFaR0Z3Y0M1aGVuVnlaUzVqYjIyQ0xXRnkKWTJocGRHVmphQzFyT0hNdWEyOXlaV0ZqWlc1MGNtRnNMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUlyWVhKagphR2wwWldOb0xXczRjeTVyYjNKbFlYTnZkWFJvTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJdllYSmphR2wwClpXTm9MV3M0Y3k1dWIzSjBhR05sYm5SeVlXeDFjeTVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDTEdGeVkyaHAKZEdWamFDMXJPSE11Ym05eWRHaGxkWEp2Y0dVdVkyeHZkV1JoY0hBdVlYcDFjbVV1WTI5dGdpOWhjbU5vYVhSbApZMmd0YXpoekxuTnZkWFJvWTJWdWRISmhiSFZ6TG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJdVlYSmphR2wwClpXTm9MV3M0Y3k1emIzVjBhR1ZoYzNSaGMybGhMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUlyWVhKamFHbDAKWldOb0xXczRjeTV6YjNWMGFHbHVaR2xoTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJb1lYSmphR2wwWldObwpMV3M0Y3k1MWEzTnZkWFJvTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJbllYSmphR2wwWldOb0xXczRjeTUxCmEzZGxjM1F1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2k1aGNtTm9hWFJsWTJndGF6aHpMbmRsYzNSalpXNTAKY21Gc2RYTXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXRoY21Ob2FYUmxZMmd0YXpoekxuZGxjM1JsZFhKdgpjR1V1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2lwaGNtTm9hWFJsWTJndGF6aHpMbmRsYzNScGJtUnBZUzVqCmJHOTFaR0Z3Y0M1aGVuVnlaUzVqYjIyQ0oyRnlZMmhwZEdWamFDMXJPSE11ZDJWemRIVnpMbU5zYjNWa1lYQncKTG1GNmRYSmxMbU52YllJb1lYSmphR2wwWldOb0xXczRjeTUzWlhOMGRYTXlMbU5zYjNWa1lYQndMbUY2ZFhKbApMbU52YllJeFlYSmphR2wwWldOb0xXczRjeTVqYUdsdVlXVmhjM1F1WTJ4dmRXUmhjSEF1WTJocGJtRmpiRzkxClpHRndhUzVqYm9JeVlYSmphR2wwWldOb0xXczRjeTVqYUdsdVlXNXZjblJvTG1Oc2IzVmtZWEJ3TG1Ob2FXNWgKWTJ4dmRXUmhjR2t1WTI2Q04yRnlZMmhwZEdWamFDMXJPSE11WjJWeWJXRnVlV05sYm5SeVlXd3VZMnh2ZFdSaApjSEF1YldsamNtOXpiMlowWVhwMWNtVXVaR1dDT1dGeVkyaHBkR1ZqYUMxck9ITXVaMlZ5YldGdWVXNXZjblJvClpXRnpkQzVqYkc5MVpHRndjQzV0YVdOeWIzTnZablJoZW5WeVpTNWtaWUkyWVhKamFHbDBaV05vTFdzNGN5NTEKYzJkdmRuWnBjbWRwYm1saExtTnNiM1ZrWVhCd0xuVnpaMjkyWTJ4dmRXUmhjR2t1Ym1WMGdqSmhjbU5vYVhSbApZMmd0YXpoekxuVnpaMjkyYVc5M1lTNWpiRzkxWkdGd2NDNTFjMmR2ZG1Oc2IzVmtZWEJwTG01bGRJSTFZWEpqCmFHbDBaV05vTFdzNGN5NTFjMmR2ZG1GeWFYcHZibUV1WTJ4dmRXUmhjSEF1ZFhObmIzWmpiRzkxWkdGd2FTNXUKWlhTQ00yRnlZMmhwZEdWamFDMXJPSE11ZFhObmIzWjBaWGhoY3k1amJHOTFaR0Z3Y0M1MWMyZHZkbU5zYjNWawpZWEJwTG01bGRJSXVZWEpqYUdsMFpXTm9MV3M0Y3k1bWNtRnVZMlZqWlc1MGNtRnNMbU5zYjNWa1lYQndMbUY2CmRYSmxMbU52YllJS2EzVmlaWEp1WlhSbGM0SVNhM1ZpWlhKdVpYUmxjeTVrWldaaGRXeDBnaFpyZFdKbGNtNWwKZEdWekxtUmxabUYxYkhRdWMzWmpnaVJyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFF1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd5Q0ZtdDFZbVZ5Ym1WMFpYTXVhM1ZpWlMxemVYTjBaVzJDR210MVltVnlibVYwWlhNdWEzVmlaUzF6CmVYTjBaVzB1YzNaamdpaHJkV0psY201bGRHVnpMbXQxWW1VdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHYKWTJGc2h3UUsvLzhGaHdRSy8vOFBod1FLQUFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQzVQVlNYUHlsaApoYzZZVHV0b09JMGZicmpFWmFDSXpLYnFmUm1OSkVNUzRyWnVPZnByTUFWRlp0cTdScVJ1L2sxVDAydlViV25yCkx6UTV2RE9aVW5QMlVGQldPNDI0MmwxVWxnMTV5eks1T0lZckdDb0VOdEdnRzMrWFlGRHV6VHBsRU1BMUgyQ2cKNjdGejd6WkFpaFNxTzlHdWRRMEJialorakFHR21JdTdXYUNJWDc5YVIzTkdyMzc1NWZ5blZoc2RxZ01VaVgvVQpMTWlXc3hzOExDYzM1Qk5UZHUyc2x4eFp6S0pHalRJTG5RMTIwWWFnTTFtektBdDlTdFZwVGVrQ2NUeDh3SGIrClY1d2xFNXdoN1kyZkZMWmNDYnp1YzZadS9xaXlneG5US1RzVUFjUlZhNUhIcmt5Qk9pWWJvTHpLWlJyWk02RmoKZlp6ZnBaODNpZkQ4dGhrQ1BZdkp5TmhENWZtbFluMmFtUGRxbXFlUE9UdmtQdFFSc2xLemZHOHNKQ0FsZ1kwcQplVXY4U2orOE1XcytTZllMeFRsQ3lPNGtvc3RFOGNRaHNTSFZHRUVJVUJEN0xOa1h5SytESFdLSUUrckJqdTYwCjNhZUVVODJheTF4azZ3L2pVTWtHZ3NqWm5CdHpkSEE4RHh1NUlZdVhMWjRoeXVrSHk5N2ZuZWFCMENhTCtleGgKUUNKb3NxYkFacXFHL014SUc0UlJZdXZLRlgveGMwcW9DT0wrQVZyQk9FTTRHeTI2OTdReWVNdVNaUS8xNUpOTQorMUZtdEdlaW5BbmN1RTIrSDlqMmpYN3NSTStkTGsyUFdMQjBmTlhTaDQ0Mk1LcmYzcEdOQkVVYk1TYmZacStMClp5TVRINmJ6TDRrMzNTZkxoWEN6TTdTcDc2TXZPUUpkV2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
    },
    "apiServerPrivateKey": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeFIvbXkxRnpDNjNqcjRMb2dybmpFQ3YrUTNuc0Mwb2h4T2pudUEraDQ2bmJPVWV2Ck02OFR4cGdHSEx2NnpYS29PZy9GR2ZJZXM1ak9wYkZVaDU3b2xOT2NMTWtFaUR2eG13OFdVeEx0dFAyeU84NUYKM29XMjVJQmxwSlI1NlNvL1BlcEozYWxLL1hvTjdvMG0vazhLSjRFalB4UDdTTE1PeUVtNFRXRjVYNENEL3QwNgpabHZ1SW9zSHRYM1pucEZzOWJzeTd3VE51NzhYbHlYTFp5WERheWhjaG1uUm9RR3k5WDdiaE10Y0l2eFduQ295Ci90R0x6RlRLZTVhaXdEZ1B4Ym00M2ltcGsvWXlMKzlGcCtoZm9qM25FVW5lWU9KUkRKUytrQlR5U0tJcVg5eFMKV0lIRDNUcjJiR0pGUzJqWUR6alRHN3crck92UHpuNVNNZVlJcGNLL2xxbnBDNDh5UDZUVi8rTDJObHVoUVFmTwo1VUdacEREcEhoN2x2eTJzamd2MFhGdUxXQXhWK0dmNkltajRvOXV6dEUvSlV5N2hWZXpNYlArR3FHL2FxSWZrCk9IU2ZPVWExUUtTdHNsSDB0UVFRaVBGam55UWFmemt1UGpWWWRHekNEWUFsYnErc0dyYUV2TjhHaS92Z211VCsKY1FIZlRTM1NhUTdKemtJMk1NeDZhNXorUGU1Y2FPcEtSTDNZSy9CTUZ5Y0dWV3dCVkloR0MyUEZVTWVmTVlmcgoySDlQeExodUNXRFBodGUyTHF6MGNqWWlLcmhMOU9BTzBRZUg2TjBJVWs3V2FkM1hxTEtlaysvTlQ2bDFVUEp2Cng1amVSMzVqS0VPbXdpbWNJMUFDdXB4WW1pWFdieU8zK1RnMWV6RHNzSVFIZ09SUFFCLzk5UDNmRUcwQ0F3RUEKQVFLQ0FnQmc2QS96di9USXR4R0poTmQ4L0prdHFCTDFaUWl2ZkNBaHgwV3k3S3h2V1Y5V1IzRlAvUy9CbjViUgpwVy9rZEF0VGo5RWJzalY1b1JObHpVbDY2cG40SUJkVXhQV2ZhNmlZeTgvend3aHN3NU5OWjFoZHptcGM1dW9SCkFKVDJGVGpGM1ZtMnlMVCs2M1BSNUQ1WklzNGhJWkVNUDJ4M0R0K2pndXBCMER0MHdaOGlPZXV0eWwvRlI0ZmcKcHgvR25rTnNnanpGMkJ5endYdDlhSzBYNWk2dGpVZi9KQ0pUL3B2VnFDbU9uTktNdUhSempTTkl0Z2I5eW1sSQpYSU5oNzYyQlRJNGZXV2Z1UDBmbzNMM25qNHNFSFY1czExMmxUMXo4ekZycVJnSGR4eXNCdVRRYUlxRUJMeTFaCmx1M3Q1bnJnOE5TSGZBRnJ6UGw1MEF2a1QrdkxoRW9kOFVTYjNPdXp4Nk03bEpsSVVUYXZDK2p2Z1B0cGtOOUgKbGJmYkhzODUzS2d6RytJYjdsdmtHRzM0dk94K3c2NmZVekZGNU9ETmYvQVZmLytPR0d4RU52enUxMXl6Q0FWNQo1TWZPMVd2a2JSMG44ZEI2cGE2T1VydlZQQnVVNFNYekNFWXJac0RIZTNITm1SVVdibzkrOGpYdjgwOXMydmVLCnlha0h0aWZRZE5HL1lIRWttUE9KUldVNG83N2llWC9nb21EUXYySm9zU05DRzBLcFhKb3ZmcG1WNWlaRURZUUgKaCtaSlFpNWdIeXY5cDlDNklJbWhHdlV0dkVodnd2dmpzSytVUjJhVFJCOUpsOWNRZUFNaXlXNVJTQ1ZCWGhUOQpkcXorL1ZFL1VyWTJXemd4THl5ZEJkRVdhSlVoblA1eE1JdlM2cThXc05Pam5rNlFHUUtDQVFFQTdINEJTL2MrClp6NTV0ZGFJT1drdWlYNThuVHI5bksrbk9hY0ZMNkJGYnBxOE5yV0hNRzNWRnpYRzE4TmZxYmRWQnRPOVIvdFAKYlFjemUxNDR0YnpZRGV1R282NkQ0Q0ZOYXhDaDN0Y2RUVk04a3BVZ2dESDh0akcrNEoxYUVQbzEwLzJGb3BCeApzWUVnU25hQVlsR2l5bXhkYmlydWxabUsxeXIwd29VWHVRMDk3RHAyd3pXNUlzYW5xalR4bVdsOWNFSGlENldtCjNOQXZKSkpXdzE4clorNmRxSmtXajllMjVJemJUbWZlOGFHL3lsT004QmFKaS9GQVlXMTBIVmtlNjMwKytUcncKQjc4UjZTamM1cFVXMnRMdEMyMy9ZSUJTNGZJaFdHc3V0WlI4Uk5seEl6b2FaVFZpUmdVOFRxTFVNdm9FZ3YvdAo2cTk5Y0VmOU9PMGM5d0tDQVFFQTFXS1NwNFRXc2VGTktXQkpQbThKR3FoaUJwNXVDcER4UUZwODBucmhpOENmCm1hS1NNekhLZDNTUEtjSmtaQWJZUHZrVThMR0RITWR4WHhoQUZFblNPZVpqQ2FBdWIzL2pobVZPNWgzZ0lPbUsKYkx2WEx4akdzV2hndXlRazd1TE9PSEQ0ZE96alZoUmN4amNSMjhQKys4bktDM2h5MHI5VVlXVE9hUkRReTU5Ngo5OENJOGI1dlkybmdRM3J2cnlPam5IdTRrOWlibldQWEVBeGJEbjJwSzNrZFhJYVRtT096K2ozYUxoTHBjczNXCjhxMmlXdVJ3NW1hY1hjZWtBTGRFU0dEa3ZEbmdpVzF5RWsyYlE2SG1SZGRtRXpXQkNaUFZGay81ejVQVFVkUTQKeFdxSHJZcW5yWE1LeCtEQ05QdVppK3lkblRpdkVWR1A3Y2dFYjNwWXV3S0NBUUVBbm8vNWhKcVliNWJXK2hHRwpNcUFRUU1YYS9YekE4RjVoaStrdE0vcU1zeFR5WHVnbFpWWXV5cW9XMFRIQW9VVTNzQ1Vsd3U2QUdZVDdncHJ4CkFRRkdCMGRFZGRpYnVSbjdFMjhLYVNQb0ZLRmJlcGljT3ZmSkRjdWF4SFVjSDBmejhWZ0pVcTd3VytoTTQwQkMKNGlrRU1oNm9JaWFNNHljWWpSM1REOTAydzY5YU5sb1lxTmdMY29LcGhoaUxhS1h2SWVZNmtPMHJUT0FVeTd1RwppdVh6YjNMd3FFdEVjbHRhMkRDTkZpdlVza1FXR0swZVVSZDdUNllJMllvT2tXTGd0Vm03Y0ZXUS9GQ2l6S2JHClBaLzJ1Kzh5V2poOVFwR25nTERjcExEd2wzU2dRWFZkUXhaQS9semxzRGJ3Y1hVQk85Q2dWOGtMRnhCazFYU2YKRnB6OGp3S0NBUUVBd2lsMGltdU1NOFZ2UWJQMFVaUVZNNlY5dE1vYUZSRTRCRGVTRnE5clpZKzdhYitNeW5xRwo0VlUxSTJsWGtkRE1tZGhwbm0zWGdLdFYxSktyVkFxcitMVlM3cUpMUG5lZkgxNDFnWnd6b1o3L3J0cm8vVmpOCkN3YVA1aGtJWmpvSUxVRldRb1orZ1lmN3R2ekxDaTU0YU1GL1VCcWtXSEZ5SlVEbHRLSnhhcWJON0h2TDREUkoKQkt1RlBjR3lNS244S05wRzVIaVhlSW90V2RQMFV1WXl0WFQ2SzRQazc1eFoydHpIRjE5ci9tT2dMNmVnOEpXbQp5VzhhM3haV2U3Ukd0Sms5Nkt1OVRTOUNPYmRXRFI5VytidjZqSVlGeVNJMEpaNVdEL1JSdDhha2RiWHVpUkYrCmE0d2ZoaXBVYklOM2Z1T3Bzekt0MGRObVpKVzR1M3NYR3dLQ0FRQkVaQktjRXViMlVGWTdYcXprK3JIVGF6SnIKbEVjOFBldmVvMGxYdHdxeEhxcCtEMUI3TkZJblNDdllvNUxzVlJ3cDVQcWFWK3dZQjNwTXJyWStlQnNpUG5wcAo5R05qNUY4NzN4bFlHR3lZeTVReVBCOE45SVJDSVNQcmV3bTR3UlpjZ2s5TEVoMTFuZ0QwZmRUNDdMWUlmR25uCjVFS0RTN3prY24zWHhCQUZBdUNIVlNHS21MaGh3K1ROWnlaZU1vSE16c2wzR09HT2x6MWdkUTg5VEQvVFB1YVkKN2g3dWM3dzhPdE9RUkFOTTA2NVlFN3E2NjhkM3MxaExlb3J2S3lVNFNRQ0tBTlFKWW5nUXFHNzlJdm9iY3JQeQozSmFaRGp0Y2VUOHNSUFhyLzhBQk5tb2hTU1FzRlJLK1h4M29lWGpaTTJmOGtjSVUrdjFqb3NOSFljMHMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    },
    "caCertificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV4ekNDQXErZ0F3SUJBZ0lRWU9LeEErODB6NlNTSThwcTltMC9BakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1Ua3hOelEzTVRSYUZ3MHlNREEwTVRneE56UTNNVFJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF2bjNaCldPVTdnTXdjNENpc3h0WG82YW5kVjd4VXU3QnRCREx6dFpvVzRCcDI5S1N5TUlVa3VNblo1b1UxYW9pVFJiMG0KTSt5Vkx3bUM4aENYZTFhaGJVdFN4NWRQNTdqdlJwMmtNZ1hZUi9HTG5XQkNaMG4raXNNMHZtOW03bldPdllVMApTTis5R3pjRHpJUmQ3elJhcjVZMTRGT2FyVWtTOU1sbkgzcGMwRlJnS2hpOTdnYXRGbmVPSmVYU2wxTmk1c3hwCkRPeUxqdldWRmp3MS9Ja2tvUUtVMytKQVJmaUlRa2xIcStYQnl4K2RMQjdHMWd6eThSZ0JJU09xY0NUVVgwUEIKK1BUQVBuOFhSRlIyaDZoSlVmOWVtMWsxMTNnYytNekF6VmVxNEdMWWN5dGY0dEJZNlBva2tLd0s2YlJxMndjUQpObU9IaEhURUowN3cvNWJONmRLK0Q1ZkpEdzd5U0c1Q3RhQzlWdXV2OHJqTkN4L0VaUmM5bDZyYzFRU25BeW5rCmJSRXNVNmgzVFZHcVZhQUxhK0U5b0QxcVIweEZsQjQ4UFZXb1o3MnR4Q05EM3AxNDkxbzdaUUxFamNzT2tJZS8KYWtNVXJYZXhZKzZCNHBUOUxTT1krdWpZcE1qWE5uUEw5Vms1S2dDbW1pREFyZExiREhnYzN3eno2OU1LdjZJbApLaDlBenlyNCtFY0ZaZTVPTzBUZzdEUi8zc2Y2WkpPbTJpTkNLMEVEL092K2pnVkx6QkpqZTBuMnV5Q2NNajZLCmlOSHo0eGpCcDNvWURUaWNuNVRwekhTZWIyOHVrOEpqeGQvR3lTTmNpQXJQTGNVZ2RYczNWNWhvdlRBK3VSWnUKMlgyVXZudUZwRWNoNk5ja0xhOTFSMFI0aXZteVdwRkRTTSsxWFMwQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFILwpCQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFEd1ZtMDRnCmU1Ym93VzVUaWVBWGd4TlRFZk1abms3TW1aRUU2Y2dpQlZrOHFNSkdpNFdrYzdIYldDRk13RVBIQzZhYmNZUXUKalZBS0NGemZhb0llNHo2Z2RMZ0VZQ1FIdnNBQ0tRWjJ3RENRUlY4ZUY0RTlzZFJMK1ZzVWx2U1ZBMGlSM3pJQwpxbHQrWWJIL29ZMS85aURyeEpFT1FRdlhrM0pGTGg2aGI0Wk5tczl0Q1ZXdlUwcE9RQ1VmUEdSVHpxSGYvQU5FCitReHJjUGU5aDU2RllaZjZuSTRKcml2NTN1YzYrY0FMTnB1azc0dm9abm9FcVFLdzVNT0NjdmVteW4yZXQ4c2MKUGFuZm9IbHlCN3hUNU82N1BzRmxpZWMyRm9aU2ZuTnhsZXRQN0dSTWluKzcxSmxnQ2J5N3JnMDhWN2NYTUNNNwpLcThMNS9jWmZyL0N6WENIUUlSeDVwVDlzNldlRjN2bXhZNmttRUxKOHpscnEyWFdLbTVKUUNxQWpiUDl3UC9XCm5CMEo1M1dGZ1NJRVVFOWhxVUNjZkEzamh1SWVxcFp3ZmNzUHV1NHR2dWJjWlZjUFNwNjlWOU9UanpkeWFDSmYKZklDeG1nZzRUMmZRVS8vd1FjOTZSQ25XNkRqckdLdXIwcGRabEMxVXpiNTA0R3hORDVjQ1kxTFMzaWFVM2wvQQplUTBUM3l1TFdGR3c2RSsvYUFkYlJKYWZ1czN6YzNHTEExekpnekV2ZXdEV3VZd1pSQ05VeENlL3BHT1JpYk5JCk5OeXNBRzBMZis2cXFmMGxURUw0RWUyQ0I4ZXZyaGkxSmJXYmo3M0hYOGJuTUlsUzZaZmRDZU45azlJdGd2ZUMKdU9DOHRkOUErbE5NZ1YzampBQ1JOdkhEZnpkU2d0VWVHMUNnCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    },
    "caPrivateKey": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBdm4zWldPVTdnTXdjNENpc3h0WG82YW5kVjd4VXU3QnRCREx6dFpvVzRCcDI5S1N5Ck1JVWt1TW5aNW9VMWFvaVRSYjBtTSt5Vkx3bUM4aENYZTFhaGJVdFN4NWRQNTdqdlJwMmtNZ1hZUi9HTG5XQkMKWjBuK2lzTTB2bTltN25XT3ZZVTBTTis5R3pjRHpJUmQ3elJhcjVZMTRGT2FyVWtTOU1sbkgzcGMwRlJnS2hpOQo3Z2F0Rm5lT0plWFNsMU5pNXN4cERPeUxqdldWRmp3MS9Ja2tvUUtVMytKQVJmaUlRa2xIcStYQnl4K2RMQjdHCjFnenk4UmdCSVNPcWNDVFVYMFBCK1BUQVBuOFhSRlIyaDZoSlVmOWVtMWsxMTNnYytNekF6VmVxNEdMWWN5dGYKNHRCWTZQb2trS3dLNmJScTJ3Y1FObU9IaEhURUowN3cvNWJONmRLK0Q1ZkpEdzd5U0c1Q3RhQzlWdXV2OHJqTgpDeC9FWlJjOWw2cmMxUVNuQXlua2JSRXNVNmgzVFZHcVZhQUxhK0U5b0QxcVIweEZsQjQ4UFZXb1o3MnR4Q05ECjNwMTQ5MW83WlFMRWpjc09rSWUvYWtNVXJYZXhZKzZCNHBUOUxTT1krdWpZcE1qWE5uUEw5Vms1S2dDbW1pREEKcmRMYkRIZ2Mzd3p6NjlNS3Y2SWxLaDlBenlyNCtFY0ZaZTVPTzBUZzdEUi8zc2Y2WkpPbTJpTkNLMEVEL092KwpqZ1ZMekJKamUwbjJ1eUNjTWo2S2lOSHo0eGpCcDNvWURUaWNuNVRwekhTZWIyOHVrOEpqeGQvR3lTTmNpQXJQCkxjVWdkWHMzVjVob3ZUQSt1Ulp1MlgyVXZudUZwRWNoNk5ja0xhOTFSMFI0aXZteVdwRkRTTSsxWFMwQ0F3RUEKQVFLQ0FnQVdJWXprMVEwS3M2d1BKdXFiMXpKT0kxd0IyM0dFdE1TVm5rM09KVzdPN29RdmZBcnZ0Q2hHQjcxMwpHTGJSLzdnTWZDTTZHUnhqOEpqMEFwVjIwT1BFVE9IN0trc3dRcjRaMkNyQlhRaDVvMGh6S2tITXVqNEdaUk4xCnBIK3k2Sm1Denp6NTBuU24rc1pJTm9DclQ4dlJab1F2NGNhd3B6SzZtY09QVnFuOTBpK3g5Rm5zazMzOGhEdFIKajlmZG1PUitwL1QwZVc3bFZ3YlJKSUdwSzAzRUh3YW8xQ0pmZnJabDdSbVVrUWJvMEcxME9NY2xDekFXYnBHRApCaC9CRTZaUXd4Q0FHZjlUdzNReWpoV1BRUy96aE5XNitxeFVzakc3Zmg1UVBRVXZPSXlwSkxycElRZVRXYXh4CjJtc1NKOUhhVElISHI5eUl1UUFwQ1BUYTNPeGpNSGI4bGJ5KzVNMGsrOHRQUEtGd0FObEY5Rko4OGtSME9SVVoKMWN5V1ZFY05JQlVubXBuaEgxYjVuQTExckoxS01oREo2WWFGcURka3ppR0tBT3ZQQ0lYVllwbFBqMXAvR0tNOQpBSU8xT2JwckJTODBUWEpCQytHSGZaQzhscGdHWVF5NzNxanFMSmpYbjBORy9VZSt1NWdmVm9WdVhRMFMrRjkzCnJtTTgySGptbTNYdUF4R3pSOXRSRldGUU1OS0I1VjI3a0JwVGVIRnFwSFpDU29mQ0FvZk8xTG1SMERWUytuZkcKVVJ3a0VmVCs2V2ZwL3diVk82L3hNZkY3Nk5INTlzQWVpRXE2L1ZGOGhKSFZ6ZjRESVhMWDMvWXhyTzd5c3ozagpZSTlKUlAyNm1QR1pFM2JTRVhvcmRDYXBpQWFKU1B5VEVmQ0FuT2F0OUlpeTYrd2pnUUtDQVFFQTg3TkU2dnJ3CkpndHB0NnRVWDBuUXNPQzloU1BrLzNRYUV3ZW1hVXYreGxFcXpQdW9YWU9taXNDakthMVNWMHY5a29jWmVMc0kKS0hQbkZuTGFRSEVXMUxDVi9QK01pbFlnb0dKTnVUQ09oODVLME5WY21OWEJ0U3VqbDhXQXRJcC9CZlIxMUp4VApFQVp2Y2lxekk4SXZjT0lzcTFPaHFxK2tBY2pjSnFHU3ZJaDBWajcwR0NCUUZOTDV6NEd6cEMvcjhTeTh4eVBwCkw1TDFKUE9WSWRPd0hlQlBHbnpkeXVhamg5SHBraTBZUFkra20wSTBGYmtEWjJVN2JSakg3enNPbXZZZXN2U1kKT3VzSWdhdzFYczdNSkJqMGtLMkNJOFg5aVo3NHBQcjhPQnFkUHNobnRueU1VM1VIeHFtbmc4OFROZHhVL1Z5RQpWNmcxRDIvdEtNU01jUUtDQVFFQXlCc1l5ZkhPYnVzL2c0cjQ1T1pzaUYzZnJpcFpyV214Nm92SWFJMnNEVlc3CkVzdmRIcW1QU1NaMTMyVkFSY0d3b2R5Rk5ndFUrRFdSSTlEcDljQi9HSkdveWZ2a2xBckFCc080SlFwYk5IZ2cKbTkvWmRoelB0dDZyZE1sYStSc3BpbWdycWdlMHVPcDFHVlpGd1FvdE9BMDQyaEN3NDh6KytWK0NJWm00WWhteApTMWZmUDdCMGkwU3hjc3RDVXFLT1JhbUhoZWcrN3VyL0VpUTNEemNOcDBmeC9JZVdleDBJUlZsQ1Z2Q3FhajN5CjVRVWJSdHhBZ2VvQ2FkYkxYSzhqNFp0R3VWbVRKcW9ZNzJnUm5uN0duVW9mSGUvYXV4WkxmUnVjaUNhLzBSc0wKYVg4OWZqUjBVS3d2Rll3Skp6ZTlvRlhFWmxOSVNLRFFFTlV4SWZacWZRS0NBUUJrOFZxWW9ueWFwWnVTa29zTwpOVHNXS09FWHB2aVJ2M3VWYWxQSnhjcXdScXFkNFplcHRJQmxkTW1nMThRRm1OcGR1VXdac0E3L0FwTXp2enNiCitqdmt1WWhIRldzWFdmbUZ0WEpRUlFha3hoUkRVRDFjcVIzbGR6LzUrN3NHRFYvMERZQkpJcjlkSWUxRHN1QWsKN2FoTTc4Sms3TzFJRUJ5MUNJZjRFSEVCV3R3bFpVb2lQREF2ai93ZHNiSEJUb0JDazY5V0pVL1BmdVcvK28xSgpSNi9wa0NIejdNako1S0xUL1dUc1FYV0srbGJLWUsvR1Y2NUxRNmxMMVRucm8rQzIyejk0RE15Sml4VW84VFhpCklYSjVlVVRFTUxwNUt1ZUwrNmN1WHkvZDVWaEF5eTM2YnJpSlVTNTVZWWlibGtoMHhPRUhXUzBRU2dKQWRMSWQKY3R4aEFvSUJBUURFTm4yNkZ4YjZnRVpKTUE0YU5TK2JENkZ6WUNlSytTYngrNXJKbXBGb2lmWGoybTY1MEQybAoxc2FpQk9CZkJpdXlxMDhielVUR0ZaQjU5REpWUFNuaTU0RUFmYlNHelh1NXBsUjhUWWxkQzZXOThtT0RnNERSCnFjbXB2SDh0NEVwOVl1UGQxNnlIM2E1dzU3MkNLZjVwQmQ0SFJYS09ETWEvczcwZ1FXRWhJRnhPcXAxSUVEaFgKRDBhSWIzSmJJUFlzckswc3lxeGJEYWFMSFdPMzBaM2J0NW82cXFFTm0wd3U0L1UrMXNIaloxY3k1aXoyOEtWNApQZ09iMEhpY0swZ2R3bW80K1BKbmFVY0dDWit0TUZhRWlOZTJQU2pYWm1jakI5NFhTeGV2Ykx0bCtOUk5XaFhyCnZNcDJjRmZSVXNEbjVQR3QvRi9XaDRrOTJDNVRSUkxwQW9JQkFRQzRCVStuV25IRm4yL0xnbEhjK1JXSVdwUUMKT3pTSDZQZHNwb3pyT2sveHROVU9WT21sM1N2bGhqcjBWamgrcjdlcUppOEpJTkVlcUUra3o5UFR2ZlBWcFVOSQpZQ0JTQXQzVzkzM0lqOGdSbXZ6dy9SMGV2VGR0RlhxbHJEMUNOQjVxaDIxUnZuczlzL09OTlo5bW05Znp3OURPCjdzT3JhYXFNQlp3aWd1bldUMFlmcUpyTVRac3NWVXFRQ2VMYjNOOXFTMStnWmRXMWc0TXA3TFBHamo1QzJNSzMKS1R5Sm01QUVML1ppZUVDVFErNm9lYVpHZkg5bHZtMEtqK0NNc1NpT2RpeStxWmRUdWtpdm8zQkVxKy9DVEdIaQovN05ORnFDRmpDd21pNUxGc1lCWUtWWUlvVnIxVE51R1dWK3Q5bzMxWjFDb1IvWHV1ZEhUR21oQ3NJL3gKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    },
    "clientCertificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5akNDQXQ2Z0F3SUJBZ0lRQ2J2NTMydWtwS3g4UTRjUkZQNVNSekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1Ua3hOelEzTWpCYUZ3MHlNREEwTVRneE56UTNNakJhTUNveApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1ROHdEUVlEVlFRREV3WmpiR2xsYm5Rd2dnSWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFESG5tN21FVXVlZDhXYnBweXp5N25zdUVxZjNpRWUKZGEzeUpuaUxNTUZTRzhoQzdJS3g2NlAwUEF1SFF4ci9xTG5WR0VjTlg3dzFVWkg1Vy9LNTFzSEJVeEZJdmpaMAplOWRwNzVxY2p1a3BjUjdES1kxV2lIb1JRT0ZWM3pqYWFGc1JEbkE3MEpHUUlNdE1abVhCSHdxY3NUWTFzMHczCnVBYWZzRHQrWU9jVDl3RVMzb1h6RmtyODNoMGpQV2JpMEQ0VUFPTnI4Y2RtbnJ6NGM3VnpaMW5HQytBK2VGejIKcEU1ZEpkcjdmRU1mRHJzaTZMMHIzMUVOb0IxTkF6a2NEU3hTdml6WEVlY25hY3lqRHFUR0FDNHJtUGRHTUJnYwpmMExoRXdCNEZ1UnFvMlpERVBoL25qZUh1cm9aRUM1Rk9hZG51QTIvQXMzZFBJUUlKVGpZM1JQODZpdHZDcXZ1ClFDZ1YxNFBhMUZCUXljNXVMY3Jtc01kRjZsVzdPbVZiMUNyMVp3L0VwYWQvUHczeFNoUXYxRnJBcUczVXdUQVMKZ01hM0xlcm5RSzZSMDNwRDhWU1UxTTlJVFBqeXJjM01TM3ZsKzZwOXBjWllMWFJITDZ6YW1GOGRyWmZvVHBaZApZaHZ3bUp1ODhsL3ovUXp4dVZmcmExRzRnV3RyU0krY1BWbStkOU5OR05SNWM2U1NHR3BpMENiZ2xxNEdpUDVQClRZT2FqWDRmMG5sbi9ZUkdtT3lrTmRMVXNJK0xqUGQ0VjhHSTlXOUh0RC9oZ3ZqVXV1OVFwZE55V3Y0eG1DWUcKakd6bDVxOHlPT1FTeWt6M3hpa0Y0UHlHMWhIVEM5amdEVGF3eVIrOGhMN3orMGdJV0k5THJQQnQrSlRQR1pCWQpVemhpYjJISWRDRHNFUUlEQVFBQm96VXdNekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBZXl4T2ZtZjAKMzk5TUxUdnZxekg0aFd0TnhoNHJJelZoRmhwbUtnUDVPcnluUGJ5cjR6RG4rb3RNUkphVldESnNCZnNydkt0MApQdUlnUzFrMkI3UFZoVVRjS0c0RUI5RUpnRFV2b0xzc1JTcWRRbGZWdytCQm9ua0xuWTNOcHo3WGNaRGFsb2ljClh0SlcwdmV1Z1lrM3JWcW9zRUhScm42akZlS0hadG96eGNJNDlpelpwNk1CNndKekRlOWZrSjV2Z3FJWXdPNlkKcnJWVEZaSW5UTGhQR1pUYTRjaExSK1Z5QmIyalVsNFk5UnpTbEkxTjlqbnFnd2luQlR4cXRJa2pYSGNMZHJaYwpINmszV3FqaXpXeS83ekVud3pJOFcxSWRub01xcGJ0MnRVSHExQ1E1M3N0M3NRSERZQlhjZXlybUtndExxYlZvCjd5dUMvOUJDcmY5dUdmTm9lZFZ5dGx6VFN1bmlEbHVwZnRsY0tlSlNTYWNGZFlRdGZSY21XRUZHbmU4SWoyUjEKRGx4NkdKMW85Y0VCcXp4NWxzNTV0MC91WDdEVm9kSmxHRkI3bXh5QjlMZ1BvN1pDRUtkdkZITVhuc2NSam9xSgpQak4wVGdydDhROUdUM0NOUkVzeitEK0ExU3h3bEE4NEc5a3AydmhmZ1Z4QzUvaWpteHVYMDJnc1kyM09HNm1RClBnUTU0ZUNvVVRqTi9LeTdVZGNGSHR0L2I0RzVMRDRXSDhzOUQza1RTRGhQNHVFenpQeVBTVWpqY0ZCL1dGYVkKQ2xpR0ZUSmhiUkxZN21qRi9pMTZ2b1FDTXlMZ1R2Q2dPQU5taFRCVUFNdE1nNkEyZFdwMWF2U0JQSVk5enVzZwozRCtQWkcxUUZraStFeFhJbTc2NVhnblJvQm5WQXpWOUY3bz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    },
    "clientPrivateKey": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeDU1dTVoRkxubmZGbTZhY3M4dTU3TGhLbjk0aEhuV3Q4aVo0aXpEQlVodklRdXlDCnNldWo5RHdMaDBNYS82aTUxUmhIRFYrOE5WR1IrVnZ5dWRiQndWTVJTTDQyZEh2WGFlK2FuSTdwS1hFZXd5bU4KVm9oNkVVRGhWZDg0Mm1oYkVRNXdPOUNSa0NETFRHWmx3UjhLbkxFMk5iTk1ON2dHbjdBN2ZtRG5FL2NCRXQ2Rgo4eFpLL040ZEl6MW00dEErRkFEamEvSEhacDY4K0hPMWMyZFp4Z3ZnUG5oYzlxUk9YU1hhKzN4REh3NjdJdWk5Cks5OVJEYUFkVFFNNUhBMHNVcjRzMXhIbkoybk1vdzZreGdBdUs1ajNSakFZSEg5QzRSTUFlQmJrYXFObVF4RDQKZjU0M2g3cTZHUkF1UlRtblo3Z052d0xOM1R5RUNDVTQyTjBUL09vcmJ3cXI3a0FvRmRlRDJ0UlFVTW5PYmkzSwo1ckRIUmVwVnV6cGxXOVFxOVdjUHhLV25mejhOOFVvVUw5UmF3S2h0MU1Fd0VvREd0eTNxNTBDdWtkTjZRL0ZVCmxOVFBTRXo0OHEzTnpFdDc1ZnVxZmFYR1dDMTBSeStzMnBoZkhhMlg2RTZXWFdJYjhKaWJ2UEpmOC8wTThibFgKNjJ0UnVJRnJhMGlQbkQxWnZuZlRUUmpVZVhPa2toaHFZdEFtNEphdUJvaitUMDJEbW8xK0g5SjVaLzJFUnBqcwpwRFhTMUxDUGk0ejNlRmZCaVBWdlI3US80WUw0MUxydlVLWFRjbHIrTVpnbUJveHM1ZWF2TWpqa0VzcE05OFlwCkJlRDhodFlSMHd2WTRBMDJzTWtmdklTKzgvdElDRmlQUzZ6d2JmaVV6eG1RV0ZNNFltOWh5SFFnN0JFQ0F3RUEKQVFLQ0FnRUFzVnMreFFMUTRQY2hoMjI5QkxJWmV3MHlvRi9IcFR5QlZBaUNTWWtEK21QY3hqbEUxYmU3Y0NCNQpUYkI5cUhETXkxeEtwTU5PZ1VEOEpVVmduMlVEdVRTSXdzemRyUmpyQjZCdkNuS2ZEc2NHd2ZlRk1FRUowNUtGCm9ybzExVGVxMGJpMlZ5NjBaZzM5RXVCWHdBSklkM2VyNW9KclVZWWJ2SDNrSGlFU3JsWmppZFJUeHVzanJRL2IKYTVmK2RiNzNxT1l4S1pNanl6VjJTSGpsMnFjVXlEVjlBNFFGZE0zL0lodWtPSlRyUGdqa2s5dWRXQUdPRGtFWQpSM2g1b1ViQy9yRWhQZVVXTDVwOHl0TVQ2eWYxM1o2RzlNRithck5YUklxUmZDRTZ5TlJzNDJHTXFEWjJ1QTFiCmt6RWhLemhTV0lEYkZiNzBFWURXL2pXMEVGbzhpb0dkdTNrcmI3OXFUeGJRWWE3YUxSWGlHc0RQSE1jejloZlAKN1dwZ3NrcWVwODlCcm4zWWFBMDk2aFlVMHNSTUhjU3NnNFJtdnpvTGIxTGdacVZxRW1QNnY0aUZycGlQMUNCWQozbGlwRHZLTzRNU3VzWWYweUlJWkU1eHBpNTFoSHA4cWZZOW11U2V4cUdWMHBRTmhoQlA5czZyNUZuQkkvdGFYCnF3K3ZXK210N3hjRnlBbDlQZHpWUmVnWmx4WnYxcGs4SVR3OWpMREFYbk9UWm9DNzQzSlhpTGd4U1lsdC90b2UKZlIvbjRyMkJvSGs2cWRYZGU4RnYrYld6MXVxMERtZVJ5eVR3UU5jc3VqUkc2cFJLR1U1OFJrNG1DZGlwdkN1TgozQWtSWXBLWXVZcTRLZUFLZE1xTS9JVGhlc1Y2b1FyYmJXbkdUWDVpMnZlb1ZVMWxic0VDZ2dFQkFNcTVHVUZpCjJtT2xHSUovZktJTHVReWJQeXpKTTRSN0tra2t4NStVaTdwYm5DZ2hDZFFwUERPcnFoUFB0V0NyZUpBZGlKbWwKeTdLMjBZRFBkYm9nY2RjaEVSK2I5bnhCWjg0UTNnbjl4Y2tsMjdkMzcrR3lCZEljTS9PNnBWMGtFZ1B4TGwrOQp4SSt3UGd6eFdhdytsVVNzRzJyU0tLS09zZG9GWkx6bkJYSDkrY1pIR2diRVpQb1JTMFBNNWg3OXBNQW5PRWRUCjlxNGx3YVVwNzVwTWwyWUthbWhsd2RYdUVnNThYU3FPS2I0VjhjZHd5VjgyT2xhVXVrUUhWbFp0UzlKSGVaS0MKOFZyYjhzeU1qQ1FMNXZBblYzSTFPcjJHaHZLQUdKckJPZVR4SXUwQnN2Z294aFZkNVFzbnF5cmtDZEc5RllhVAo1SVlpRWtCWk9EUEN4bVVDZ2dFQkFQd1VmYjhnSWh4eUN3L1YvY3NGV29XVUwzZElPd1BZblZ6bFR3SEJUSTlyCjFndXBwT1Avb2xHQ0phUG5Wc1BQeFlQZ29CSXVSSjdyZUhCclFvS1lYR0tBTUZ4Q056R2txbGo0RnZSYitoUFYKd0wyNEthd1FjMk5vdUxyWGg2QnZZYkUrV1phZG5HWWREV0doWDNVcGNjSmdmS1p1aW9VNzRaRVdvb2xjbWYyTworYnFWUXF3dVpySzNWV2MvODFQTkx4RFk5UEcwLzgySytnRTBlTG5oRWlrRngxNXZhcm1NbmlpK01QRURHbGlWCkxWNldrR2lHcWtGMTFYZVJUNkJlb3V2Mzd2dmxvMXlYcE5KOElhMzdEaE9POXBPcVA2dFpvUzYwbW13YitnOTEKL0VqM3FYVklud1pSWHo2MkwzT3hLVTFqbzJTVDdKUTYzbCtYY2lMenJqMENnZ0VBVnpPK0VHbFVaZTZibDI3OQpqcnNhTTdrSU9OeW5vNEpUa3prV0FhZ2xYdG1QVjVlMm9hUEhPTGJNSjA5K3h3R2JqK3FVV3Z0OW52ZVRNU1NNCmtLN3FLVThaRFk3S1BYTHBFelFnUHc0QnFWLzJubm9pSHVTMEtraGxkSjlDQ01tK1VpSEovL2NpZVdpbm1HdXQKVmpGcGhpdStjM25KYnZ1UXQ2Y0FTVjNhOHNqOFMzVkVWY3JmWU01Vm9PbWZ4NDcxOG80c1lFcFczMXh3YXZxYQpEYmFLbmFNM1dJY0ZGV0FlTmtyNnpKWndrRXJpUVJkY0YrKzhzb2V4aEJmZjVMZUpHUUFUNUprYzl5ZUx6cjlhCmZScjlrU3ByTEQ2SGNRVlFRVG9tMjFMbzgzbGl1NjZ5YkpzbGNnVjh4QXFoVDRiZVRuRld0QmdrQWlyZnpQeFQKOTdmK0hRS0NBUUFFeU83S0hmWUh6REpoanBKT3REOVBvY3gwMnk0am1JMEVJbVlwaGwzSnF5WlkrbE5pOEl0SQpPTXcySEVJTlhYaEdWSkUxUnlPT1VMSHNrRnltMWZXSytSdng1Ri9mMVZ4V2EvOGpqRXRtN1B2SG5pTk1YTk9UCjQzeitMdkVvSG5VZ1JDcTNMUzYyMFg1YmlCQ2p6TEdZR3ZUQ3cvNWxJUW5iRXk3cXBKTlh1TXNNdTZDVVhCMGUKNzFQenJjY1VwQ1Jza1hHMDFOYTJOQmtpeExnMTd3dkZNNUxoUEFRdW1YaTNGVVVnamdxRisrN3NpTGNkQk5GZQpoTG9VbHZHSC9jUGg3c2JlaVRGY3BKUkFXcExaRnBiaDBDam1ES2xBdTJiUDJDWEdQNUd6a1czRWhNNzJwdlk5CnpIV2VYeDd2ZDBGdGNxSzdXZ04zbk5aendoQXNrYXVSQW9JQkFRQ0U3MEVtUHJ4akZiN0ZKdThLa0lja0Mya2gKRjR4MTVJNHlIN0E4T1JJV1UvUjFadUc0aFAva3g3bnJyOVdqdndOanNIcWtUOE1ZM3ozS3N4NkJJa3BoeXlzdAplU0lEaTZ5cUNad0dWNGVYUHJaU0tvd25qWHFoTmtTaERaM0lUdExoYlNkKzJVT2xlT1daTjBET0NjV09sTVBCCm5HSXhLclB3aDFxbWxWUzJNZXlhR0FXcHFobUNnekpxZVVScy9TTDZicjlLUm1WVkdMaE1xK1R3dk9CdFBhOGkKT1prclVzb1pNVkk2elh3S24wT0Z1S2FuRjY1ZzA2aEJoVktacnVaNUhQY1JtUldHaXZHUDhBQXFhMGJxbEJoZAoxU1pQb0JCdDJmalJEZ1MxekNWaTU2dWNOaXA3elJGRmZDOEpHY3ZiTlhVdVJpYVNrbVNWd2ZUL01reisKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    },
    "cloudProviderBackoff": {
      "value": "false"
    },
    "cloudProviderBackoffDuration": {
      "value": "0"
    },
    "cloudProviderBackoffExponent": {
      "value": "0"
    },
    "cloudProviderBackoffJitter": {
      "value": "0"
    },
    "cloudProviderBackoffRetries": {
      "value": "0"
    },
    "cloudProviderRatelimit": {
      "value": "false"
    },
    "cloudProviderRatelimitBucket": {
      "value": "0"
    },
    "cloudProviderRatelimitQPS": {
      "value": "0"
    },
    "cniPluginsURL": {
      "value": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-latest.tgz"
    },
    "containerRuntime": {
      "value": "docker"
    },
    "dockerBridgeCidr": {
      "value": "172.17.0.1/16"
    },
    "dockerEngineDownloadRepo": {
      "value": "https://aptdocker.azureedge.net/repo"
    },
    "dockerEngineVersion": {
      "value": "1.13.*"
    },
    "etcdClientCertificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEakNDQXZhZ0F3SUJBZ0lRZEpCNVNnUW9wNTRBcEwvMG1aNWp5ekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1Ua3hOelEzTWpCYUZ3MHlNREEwTVRneE56UTNNakJhTUJVeApFekFSQmdOVkJBTVRDbVYwWTJSamJHbGxiblF3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLCkFvSUNBUURFc0ZOQ01hWXNudVYyQ1crTVI1TjBlR3gvSHJzcFFsZ0lzejI2ckplOVJYQTBRWmsrMHA5dFRUUEEKWW1NUnBJaG5hcWVTVDZzNThudFRSUC9NMHRmSVhVOUUvandGUCtEbG5CejZ6cWJzMGRZRFhzcnpaMDVCVzdCagplb2ZrRGJRUDhmQXdXSjZHQy90bFJveis3KzFoMjZyQlErK0tBOSs3UzMyR3hCbGxaVVZXc1ZtUEJhUE1aUkdJCjZKb0h2YnRqWHZDbFplK3F3STE2MWF3Q0kwaTZBR0JzZVZsN3hrTkJBc055UkVFUC9WUlgrOXJUTWNrOXdacXgKOTBjK1JzNWViRDlGYWV2aHZnbnJRZkZTNTFQakYyUUdBYTBGd2R1NlBLMVNWTEdTOFNCWXZMOGtTYW9RR1ZlVgpzOGJaZTBSeVZ4ZDdFSDM4Rm1aNElHZGJLY0o0WkhzRjM2aGVjd2NYdWNVdStRcGFML0hNVTEwbStoNFhINDhjCnRqaE1SK0NKSHd3WWIvOGgyYUlHQnRyZ3IvTzlkTmY3VE1CMlpySG84RHJVWDJHYnQweEUyTWlQVVdMM281T0QKcWJ3NnA5R1NqazVRN3kvVXJOMWZvSDNRMWVDMXhFbW5pelR3blNkR3dVN0ZkdTQyNG1qa3JyYk1qTERrbFo2UAptRHErMjVHNGpWdEZ3YWlUVVR0VEVKNGhsbTdMaURHQkRuN1pldTFWeW1IcHFrbGt0K0trNnhxc0V0OTQvWDN0Clc0a3Y2MGc5OHdPdnhrOUk5OThjdFE4N0NjR1o1dkd4a0RVaFVGYklMeVhKV1RmdlEyL0ZuZ1YraEpGbENGVk4KR2tuVGp1N2VBN0g3NjZLUGJ4cVBJaDZoazIyOVJMcUdRMmRkQ1pzcmlTVkVVSmFxS1FJREFRQUJvMkl3WURBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHCkExVWRFd0VCL3dRQ01BQXdJUVlEVlIwUkJCb3dHSWNFQ3YvL0JZY0VDdi8vRDRjRUNnQUFBWWNFZndBQUFUQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBS3Z4NzZmR2dTL0VTZTRsODJSSkJ2MklzaGh6aFA3Q2NsTlJyTldKVgpZaVBSSkRjdEt3YUtUVzczU1FkVmVNY2lsc1RjWlJrcFI2bWJMZVM5b3FoOWlFMzY0Q1MzbVJHUzFiQm9xZkNCCnY3d0loelNKK204YzlpNmVYcWtWRjU3c2h6dXMyS3VGZHIyaUlWSFh6cEY4ZkVFWnhkMWpSV29rNmM2NEdreSsKUHVuMDdSNnQvYWwrOHFoL0lXUWlWRi9iTTBMdVo1bFNTTlY4b08rY21QdWdKTlNrOHZNRTZHb3FDbEYvNlo0agpFc1ZCNjljc2VlVWJ3Tkw3MFRnV1RjVFFJVzUvK05pYVlwK3krT29ZZlptWUtPVSsxRnJFcm9UTVBwNFdzZWRaCjIvV05GRTBHWVkvZzlnd093S1MvYlNkODhWeDh6NHVyNjdGaDRwQjBTWm9jU1dMbnNCZCtqRWF6ZHUyK0czUTIKY2UzeEI3cGNuQk5pcEVEdXJXcWhraWZvWnhjcjBuTm8xNVRQMTQ5UVJjdktTeXBVMllpd045Vzl3UkFhUk9pNQpyclF4aUdFUGJMZmRKYnJqUEhtUnpqbHNaeVF5Q2FrL0lndHh1WjcxWFFJVSsyUlJtamgzbHNTaDlHVXE3dDRLCi9XbzJWTDZJbEFNQ1lweWRaRmZIVksrVU1BQjdKRlo1NkxOQnBidEU0MkxyTlorU3YrdWNmc05DYXM2ZXh0aGUKMHQvOGE3UWxZczBIN3J0NnZqVTZmKzcvbFJvaWlWL3FVZWdDMzVpazhvZzBrNW4rcHR2QkJsbU9nU0VPRXcyMwoyc1BsZTBSVHdZWGRBZ2lTVHVDb2g1eXlBNkErenU0YllJTnBjNGRmN1JKb0Z0UERjNnJMdDJWaC9kbDk0clQ4CmxXUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    },
    "etcdClientPrivateKey": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeExCVFFqR21MSjdsZGdsdmpFZVRkSGhzZng2N0tVSllDTE05dXF5WHZVVndORUdaClB0S2ZiVTB6d0dKakVhU0laMnFua2srck9mSjdVMFQvek5MWHlGMVBSUDQ4QlQvZzVad2MrczZtN05IV0ExN0sKODJkT1FWdXdZM3FINUEyMEQvSHdNRmllaGd2N1pVYU0vdS90WWR1cXdVUHZpZ1BmdTB0OWhzUVpaV1ZGVnJGWgpqd1dqekdVUmlPaWFCNzI3WTE3d3BXWHZxc0NOZXRXc0FpTkl1Z0JnYkhsWmU4WkRRUUxEY2tSQkQvMVVWL3ZhCjB6SEpQY0dhc2ZkSFBrYk9YbXcvUlducjRiNEo2MEh4VXVkVDR4ZGtCZ0d0QmNIYnVqeXRVbFN4a3ZFZ1dMeS8KSkVtcUVCbFhsYlBHMlh0RWNsY1hleEI5L0JabWVDQm5XeW5DZUdSN0JkK29Ybk1IRjduRkx2a0tXaS94ekZOZApKdm9lRngrUEhMWTRURWZnaVI4TUdHLy9JZG1pQmdiYTRLL3p2WFRYKzB6QWRtYXg2UEE2MUY5aG03ZE1STmpJCmoxRmk5Nk9UZzZtOE9xZlJrbzVPVU84djFLemRYNkI5ME5YZ3RjUkpwNHMwOEowblJzRk94WGJ1TnVKbzVLNjIKekl5dzVKV2VqNWc2dnR1UnVJMWJSY0dvazFFN1V4Q2VJWlp1eTRneGdRNSsyWHJ0VmNwaDZhcEpaTGZpcE9zYQpyQkxmZVAxOTdWdUpMK3RJUGZNRHI4WlBTUGZmSExVUE93bkJtZWJ4c1pBMUlWQld5QzhseVZrMzcwTnZ4WjRGCmZvU1JaUWhWVFJwSjA0N3UzZ094Kyt1aWoyOGFqeUllb1pOdHZVUzZoa05uWFFtYks0a2xSRkNXcWlrQ0F3RUEKQVFLQ0FnQTZqK2xxUnhBY0x2OVJJc1FVdDJiL0FiQUVOV2t5Z3E5bGY4QzhhUkVRNkxEY3pqOUxoaml6dVkzVQpGVGM4RklvTWlLUDJHMFIzRDJ5S3dYdU1SNmE1NEpadWkyZmhoRUI0L1A5ZjZkR25wMTZhU0VvVEtNb1RDYksrCkc4aUVMVlJVZnd1dHlXVUJzbVdhcE9Qc01CRzAxa3ZFR1c4ajM3MW9yYlJsUU5QeTdiRTBlNytYcHUwN09VaDgKUkExQWlzeFZiUG9udE84a0h3ckE3UWUyNXp5TExQdUlzS1RsQm9ZVndEWGpPdEZJYW53SGFsU2dGeTI4OW4wUgp5ZmRyWW5lbGc0TmZMb2R1QWtBL3pMV0dvcHZHZkx0cVVtdHEwR3FVeStZcklrNXcydHh2cjFzVitkenB5REhjCnY5ZFAvN1RFZW92aU4ybmJlZXZ1am05WHBGcGpLbnlZejkxMnUyb2VrRjlYWkJZc0h3dlZKYWZKVmVxN044b00KeUNYMWhXM2NlazFMVzJ5ekhKbDRCenB2ZXN2M2xEekZsVUVQWWxFSGZ0TERvK0ZtTHZ3TGFpK2oyckRWSU9JOAoyU2VtdTJGdFY5Q3BTU1FUQU5UckpxRVhqZDRocVdKUXRWdkVYcC8xcnB6NjVIRkJSUkVsdkdQVTBOb09uVDV3CkpiUG1wNTdJTFJra0tYYWRKVlNlODdVbDRMNWtMeVNyaFN4bjcwZGhNbGtaY2NsTENWOFdsWUpIeDdJWW1YT2gKekUrczZsZUVzNW0wN3NCRVZLUndob2k2M1IvU0RFRkF6L1dxNWh3QkZZUERiZGxWdlk5cE83aWlQQUN3WStucApTeEtDb3JuYUN3d1lzalFWaEFsK3Z1Mk4zaUF0V04yQU5CdWNlZHl5U0NDV2E4SDFOUUtDQVFFQTZ0ZUh6MW1hCmE1WlhCWTBtYXNnNHdZOHo2emk0dHY4N0dsY3k3QmFoazNVLzJyZGJCZ0hvTzFab3pPb2RFbGdhRmxiL1NGNGwKNklYQmZxQnRNVmprQjRHc0xyYUlxYnU5Z0p1YWlSaXM3ZTRkcHM3cGh2dWw1Z25EMnN2NzF2YVhka0E3SUtSRApURjQ4aGx3UjFKZjIzdzZxeWdSL1JWNm9RRHNUelZacGJyOWJjTFdpZXdFQS9hc0RzTE1NUTJQUU5NZnYzcCtHCmpveU9xOWgxRmMreDZETHlUM2pDZE4xTkhqeTVnWUFYc2swdjJlTHZheHNWdW9rL0FVVm9FY1ErSFIwZTI5Rk0KdndKd1FhTkNkbHpGV1RhNDRrWTc1cHJXS2dFSWhwTU5uWEdJWU43MzVIUXJTL0ExLzR5WlB3MVlFWDljY0hBZwpOZUZuVkNOWThvNGZid0tDQVFFQTFtalJlL20zc3NoVFRyY0JzNlF5SVNBUVpCYmFLUmMxZzdaMHY0K0ZONlhrClhPN1lkUGdxdzJCZndLVWZCQkNvcDFOS3JsbnZreEQ4ZEFiZVgvQ2hIYjRaOUIyczhJL3FpMmhaRWhpUlMxRE0KUUI2YmRGeGcvRzhJOGZnNmh4eWJ0UHhLS21lZDNtc3Q2RjJROE5RbDdXbEcyU3VQOUxKUkJOeFZ1eXlYU29JMAozT3Z4Q2t0OXdYNmx4bTYwQVhNUE1kNHFCOTlCeEdsN250Q3JxQzhyVGdacSt5RjdmaWZ6bUhXRkNTRFB4dFh3CmhueUQxK044K040emhGdXhzeDNkeG1iNDQ2cUx6QWIyWFZyeVBCSlBhV2FoSTVPRlFXdGh0MjBQbWRFc1k5dlAKam5ZSFE3NVhiNmJYY1pKbkRtanVESE8xRkVPRkJHamlFYnNoK3FZRDV3S0NBUUVBbUhVSHMvTGxyd2JRdzhmWQpzdVg5QXB1bkJ3T3gxd3RuSVRpTzFIbjB0emdkRmk2R3B5WEIwQlBPd1lrVENuK3JuK2ttbmFLUlZaelAreGJICkRJdzZyU3pmelF1dk9SR3FlcjJKMjRycmFTTjJtSDRuV1B3eHZWK0ZpSnQ0aVJ0WlJPbDUrVHpxZTcrSjUyZ0sKSTB2c2R1NmNyYjJ4cWlWRGNUOXBJWnNCbzJZVFJONkY5dmkxM2ZpUjBycktNVTJ4TXpMQlpIT0g5UzhHeUVVago3ZDhDRGs1VXhJY1BKck1zaDM3QXAzT3k3b3Z4anJBbTRnK1pVWm9jRHdVeUJLYXo5RTZkWS9OQ3NaWXhya3NBCnNMcVZXOCtNdzBqNVJrSXEydVlFMU9qT28vRzZxYmpXa2JkaERGR0xuTFY0SDFqWVhiT2pIVk9OZGEwNVdZUUIKRUtaM2ZRS0NBUUVBdHhQWmpCcTJtSm9sU0ZsTHdyQzVmVDk3djNzajNXSkw5Nk9jSE5YWDBxUjhVajQvNWVEaAo0dUl2NExjZHZNTGN2OE9IU1VqU0lLbW9ad3BXWjJWNHJZVGRkR3pDZHNic1p3MDZ3UkRwUDM1R2FabTQ4NnJOCnhiNnB6TE5BaG80UEJvTkdjTjc1RmlvK2tPTVVHQStPTXlKcHRKWlYzWU5GV3ZrbzJ5SkFMUWJ4VEpMS3h4ZWUKMGRIcWkzMkxocEZRc0N3Ymg0MURBd3R1MnpVaTNnRW80UDdwNm5XMGxReFlIQjU4OGtacUpFWVprenhPOTlEdgpyVEZPbS80UHhmb0NuSjdnZHNYeGlNMkpJRDNBQ1RzNVE2NjJlVUpGem81NmFiMWVUT0VuSGoxYkJUSVRFZTA5Cmk4RFN4YzlVNENFSTR1a0ovYnVKb1RKTmx3WkxCVk1za1FLQ0FRQnNQT2JJLy9IZnJUd0hiNXE5Sm0wMDlOTTQKVW1LSXlxa1pvMmx6UEIxUytNcmUvMkhXZ3JVVzNiUzhrU0l0UC9yRHQwb01LcFdaWUNnZStzSXJKQWNaRzVxTwpGdHZPMkh0aWRzanZ2YXRZSERMbUtCUS9HL0F5Ni9WcGVrTGplRlpBcEJhUG10M2F0YXhkRG1zVFd4SVhCSGV1CmR0bjR2MS9ocjZ1V0FiRE12Ri80SWdOeUZjbkZweXdXZiszODYwb3RlVjZTM1ZWWkFFbTFKWjFIQUNCQ1QwZXMKNkN6SWhCT0JKNFhac3lxSTNaUm5kQzJQZFBvUUpXdndJVGprS2VNd2lQNTZsTkpUZGxnTVUrVWNLcUh0Nm5WdApNS3g0YUlVaXdHV04rSW1hOE14SGRKK3JKRVhIbzdIbjBMM3JnVVhWeDR5ZDFFSllzOXpqL1VZUTFIQUUKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    },
    "etcdDiskSizeGB": {
      "value": "128"
    },
    "etcdDownloadURLBase": {
      "value": "https://acs-mirror.azureedge.net/github-coreos"
    },
    "etcdPeerCertificate0": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZERENDQXZTZ0F3SUJBZ0lRYjZZVFEyNW1OOXdMWStpTUdNNWpBVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1Ua3hOelEzTWpCYUZ3MHlNREEwTVRneE56UTNNakJhTUJNeApFVEFQQmdOVkJBTVRDR1YwWTJSd1pXVnlNSUlDSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDCkFnRUF3dVZxMjhiRklrb20yeVJhVkUrS1hYSUI5WlBDR3FhZHVRQ1Rqak55azRlbk9JMVJtWTdtYm81aGpVRGkKRG02Rm1XczZtM0dsTmpGaENTejVlZXc4bXJWc3pUNEZTL2ZVVkdObEdXc0kzTGhZdGNjYVFqWE1JdGpiVWZyTwpLYlFGOVdacUxjL2VHZC9KaVZXdDJSdGVVWlFoOFpjT0UvUWl2eWxzOTVMMGxZcjdJbjhRa2NjYUI2bm5LbmlGClhzd0lsVlZaQldMRFY0YWxLc3pMNTR2ZVIxSXZMUkZVbVhtak9UN2tUaXZyZ3RoM05XQWlnTURHWC90YXFjUS8KN1RFTGtza04rZjB1UzI3dFBMc1RybWo5M2NSbmUwZUF5UUhnUGV6VXF2ZGZaNEdSV0dkbHRkTE1PV1AwRzI4VQo0YlNIZ0ZuQUV6NTVkVDVYMjFOUDJ5c3NtU25KdUx2LzhDNnFZRWVmQ2w3ZXk2S01xNnNCTFVBckoyOThBa3drCmhWbjBMaVJwYXRKVnZpYUlpYzRmd0E0UXB1RithRytiaURlTkR6dG1hNC92WjBjVGpQNkpXWjVZbURMdGczZWIKQ1ZvVlpxckdyazI5a085cVVzNy91UzhHWnk0RlBHeTdHbjBxRVpJQWZoWmVmK2NmTWVaMmVXcXFPY1pwZlA5VQo2bFZaSmRIczFOc3hTTkF2K0ptVGtmMzgwTVB4TnVqYVA4bzgwS2pVYXp0c1o0YzVKOHdRb0J3OXVJUXAzQWRICjVCVzZRUzdYVm5SbFp3cHBTUUJaMmFxelNKWVVDTkRWb1ZPdEFoUldsNnloNjg1cngvZ0lGK09ZNmN6WHdrQzkKY2w1bDBvTCtrekRpWWRQVGVGdzRmWG1FSWZGYXRTWnB5YXJ0Y1U2eU1zeHhDTk1DQXdFQUFhTmlNR0F3RGdZRApWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WCkhSTUJBZjhFQWpBQU1DRUdBMVVkRVFRYU1CaUhCQXIvL3dXSEJBci8vdytIQkFvQUFBR0hCSDhBQUFFd0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnSUJBRFNUdkVzclgrMHNxTnQ2aUh3dmJUdWswa2I0TS9mZkNNVktueWhiS2tRMgp0dEV2U2RoaEF3RTgrVmJrRmpYMVNnbDBFMTZyM2R6Y0s2a0RhbmpncHFTTnpGL3BLcUtiaU1CUnpoWVlmQWtYCmNiNlpFQW9ZNHo3QWVXb09FbkFmZ0M1Z3R0NlBHTitLZUFlYWFET3ZYSDRLM0h0d0JVdno0SFVUUEhQdEFoWS8KRUh6N2xreWtLWGRiNXZzL3NyRDRocGZDWlRvUkhwWkRVM21aU2Y0SnVScldURThSZElLU2gyOEp4MkFucDUxSQpvdkZsZGZpeExobWxZczZIM2lsa1U5NW8zZTFJR2hidEZyLzZEaHpLZFRLSHdrenhjYlRDMUpyTkJTNHhkR1R4CjhneGFMcGc0SGxadzA2TVRpY0V4ZlZRU0kwa2x0KzJEWmNNWGlCemQ4MXhvRWk0RUN2NEEwSVF2bThhV09ReXMKK2pHMWFUTXZRTmdBYnhRbThldXd6S1NWVGhZOVN2bUdrN1dLbDAxcFJXdVBUYUFwM2dUK0RhdXFVWjVjaFcydgo2VDVuOUFoQTRLb0JyQ3VKb0tYWTVCOUpWaExERWZzRFpkSTduYVdlREtmbXJUcDJsb1FXczZyYWpBaCthdms1CmVhaGdLMlZBdVlnazR1akZSRlhMOUZaS0pBQjRxVDN1ZzQ2Vyt2eEFMNStaN09QN2padjIyMDRjNlp3bUllcWsKdGZ2QzhQbWZuYkJ0aHRudGxuUlZTNEk0ckdNS1hXbDNDaE1KdW1BSTF3SkRrcWxFcjZCSk5JeE1UaVBDb0c5cQpEbUhoa2VVclJxVzFFZE00eTlxSUF6T0VMdVhmZ3RLTG9xK3ByaGVBYUIxdE10aXpyYnMzNmgrYmNhTjlCbWdmCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    },
    "etcdPeerPrivateKey0": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBd3VWcTI4YkZJa29tMnlSYVZFK0tYWElCOVpQQ0dxYWR1UUNUampOeWs0ZW5PSTFSCm1ZN21ibzVoalVEaURtNkZtV3M2bTNHbE5qRmhDU3o1ZWV3OG1yVnN6VDRGUy9mVVZHTmxHV3NJM0xoWXRjY2EKUWpYTUl0amJVZnJPS2JRRjlXWnFMYy9lR2QvSmlWV3QyUnRlVVpRaDhaY09FL1Fpdnlsczk1TDBsWXI3SW44UQprY2NhQjZubktuaUZYc3dJbFZWWkJXTERWNGFsS3N6TDU0dmVSMUl2TFJGVW1YbWpPVDdrVGl2cmd0aDNOV0FpCmdNREdYL3RhcWNRLzdURUxrc2tOK2YwdVMyN3RQTHNUcm1qOTNjUm5lMGVBeVFIZ1BlelVxdmRmWjRHUldHZGwKdGRMTU9XUDBHMjhVNGJTSGdGbkFFejU1ZFQ1WDIxTlAyeXNzbVNuSnVMdi84QzZxWUVlZkNsN2V5NktNcTZzQgpMVUFySjI5OEFrd2toVm4wTGlScGF0SlZ2aWFJaWM0ZndBNFFwdUYrYUcrYmlEZU5EenRtYTQvdlowY1RqUDZKCldaNVltREx0ZzNlYkNWb1ZacXJHcmsyOWtPOXFVczcvdVM4R1p5NEZQR3k3R24wcUVaSUFmaFplZitjZk1lWjIKZVdxcU9jWnBmUDlVNmxWWkpkSHMxTnN4U05BditKbVRrZjM4ME1QeE51amFQOG84MEtqVWF6dHNaNGM1Sjh3UQpvQnc5dUlRcDNBZEg1Qlc2UVM3WFZuUmxad3BwU1FCWjJhcXpTSllVQ05EVm9WT3RBaFJXbDZ5aDY4NXJ4L2dJCkYrT1k2Y3pYd2tDOWNsNWwwb0wra3pEaVlkUFRlRnc0ZlhtRUlmRmF0U1pweWFydGNVNnlNc3h4Q05NQ0F3RUEKQVFLQ0FnRUFyc2wvSHlGUmRLSVozTmpxWmNoNzU3Z3lSNksvSnBXY3gramJiR0Y1ZFJQb2hWQkFDVDVlTEhKbQp6SDZPL2JCakFxZG5CVGRUbXBtSVUrbFF4K1owcDY3anArSGljRElQNjZyRVpacFhkVk9pdzB1UG9pZUxMd2xiCkVGZWxBME9mUUdrYituLzh5U21wSGhDSC9EaU9TdzFWcjh2djVUZEMzanZ4ck1yUHJUbmFaaUtjb3BCMEtNRlkKUHYrZFpOb0pMSnhCWFJJbzdGc2x6NCtob3NRT2tkb0QweUJDeGUyUDArd3labVQvTHZhaFdtNGdJMlkvd3A2eQp2YVB5VE85NldLY1ZjTWg5OTByQldvRFFjczlZTmNaSnBBY0pXYnZqOXNWcUtQWDNTdVdwaXlZWDBvdjllYzdKCmdyMEpkaTRvZzVSNkxRZ1BkM1YwNTQ3OUJDcmhMOTRCR0JUeWlLNHNpa0gxT3hCZkdBTVFvcEpxUlZYTlhxejYKOXRmanhPWWlINnVqVzNmMUREeEVEYU5ZWXZGU0drczFsbnc3UUt3SGlSTmdjODBnODJ0VzJqMjVWWUNyakFUMwpmYitTd09JcGg3N0pJMm1yWCswU0FoMThYaU8vbk16NWd0TG1sVnRXbE5QaTRsNm5Td2p5K256ditlRzhLRnhsClUwTEhPRDZ5V01yWmw4VzZIVENTZ0ZlNDZqK2NMY1VlaThJZXZMUGR5amNJc3lQNkIzMVgxQXZmbzFvTWV6akwKbldTMlZDYU0rNVkyWjdOVjNBakVaT0ovZEpvN203MWJuMjlqcnN2aEpPeHhvci9lMmEzS2lBSjZGa0lLZmJlMwpCaFB3WkFhWDZHMHlwVjR5cUJiSm1GT3g0ZVZWaTNhVnRlMFhpSFVqS01Gakd3SlFvNWtDZ2dFQkFPNnh2OFRBCmJPaThzK1UzdXExMkZObzB4YllkalhYUUpoUUxCd3lZZ0JiTTg2djZFWG12M3JNYnlVQ3VwNnBTUWsrZThmdGoKeThFTW5nYUdveW5rNi9Hc004OHhkRGNsYzY1Tk83VXlQY3lPUURxUlZ5MS9TM3AxcE9maUIrTmZGYyt1ZnJoZgpZZGQzN3pSNEJ3SHN4cDdBVWxnTG8yQk10enBvZEhYaXpUN3libFVmNHRXMGMveGdEcHc4RWNEZXo2NDIyMlVPCndZdXAzUFFXcmt5U2oyT0MzLzhWeXY3TG54eEgycldiNllOcmdSTXFqNEdaOGhLVEROVk84YmhSaXdqMEttejcKcGo3R0kzVXJMT3NncVliQVY5NC9tR3BhVGtYQkYxOGVLbVNYT2gzZUxSZEVCYm9WYmR1VG55WFdNc0EwL2dwQQpOeHErbmVhS1pTeU4rejhDZ2dFQkFORUd3a09FSmx4a3d4cjRQbHJwSHB4TCtXZHpYbG9JNUQ0dGU4dWxkQ3RSCnY2RjBzRUdrMEVpSXRneW56ZnY2Ny9GdVI1TlVzNGhmTDlJYzlmQXFwbGtpb0szekFJMHdaVWQyYnRtL3NRdUoKclVLTnRLdi9hLzlnZDJQdzJuV3d4R0FaK3p2MGNMbEM3UytXVUppSnJCTlM0b0JGejFzZEN0cFBiVU9PNUJQWAppSCtkOFFTc2NuTHZ1QXdpK2hvQ1h1WVJVMzVIVDNRNmV4WmI3WlVBeHVQRlFmWU43MlRJUnlBUWJSNVl3TEhsCjdaalpzQ09wZlltRldDOE1XeVA2WDZVVEJtUktkN0E0K1RGU3pjWVRYNlIvNE9PR2NCU1VSU0VXQmhadWhUdWkKSlhqa1ZTM2t6azUvcU9OWFFnZWlHZUJRd21hTGswaUgzUUl4RDcyYU1XMENnZ0VBQWF2M0J0NitKSWNsejJZcgpoWWw5TGVZT3VHN09qZE91WUplUExoUm5XVUdJTjEwaUFETXVJUjBCdE5WRVVWb1FJdFNmSno2VXI3NXg0T1BTCmdybWF1VytXVVU0c1hUS0M4K2FRazMxTmw0QXJqUDExbWRqNVkxc3RrMzR1eGZYbGhqWFhwMXpycDRHc2lEYUsKL2dWMWdxa2dLb095V2p0UFVUWm9FbWRMUHJTZDl6U285d3d6ZjhJQWVER25naTFOVVJBTFMxTG1JaDlIYitJMAp5RTZDZUpUekVxdEpaNjF2YU5oTC9OZWh0QXp0czMrcHo2T1BZWGZzTUJaRWRTRUZFMFA2aEJiakhDOXhFaUlDClI0ZE1DS2lTTlBsSERQK2k2clFtZ01FS1ZQZ0dMUzFnTFhpSmZic21zTklBM0ZmNnRRUHAvNUpoa0d0aldia0EKYW1aNEt3S0NBUUVBeWo0UjVDV093RUsyQy9nNHpObFZ4c0F6dGdhSU9mRDBkYnlvVk9mbk9LckdFVC9IOGh1MwpjeGJqbmVjV2hFSE51dm1LdzJCbXZRSHNVUTI0WUFIRUplWTlOVkV6TFdpdjlhNy9uaXU4NzM3c1pzS1pGdm54CjBvdlJ1Sjhub0V2Q0ZZSE45YnFTL28xazFIQkoxdTBOMHp5VTdxdWM3M2x3TUw0ODUrcnZmc3RCeE1oYWxMME4KbDJ1ZDFoQlprS1RPa1NnZWNzWW9lRHJGTVdNTXd1aVhoM1lxVmhveGtIKy9ZYVRERDJPc1BmUk1LV0ltN0xwbgpQcElJT3ExbjJhMjhzUWx4VzhRNWZnWUNCZGtxUkFZbXVoRUkxTndVd2JTY0ZtRXF6clZzcjhBNUpYazNlVW95CjJ2emx1ZUdKZjcwMThEWHpnaWgxL3UyRngwTVZDY3lSR1FLQ0FRQW1ybHlaWW1RVmxkanNLZXpoM0R3MnF2bGsKWVVsdFpRWVR1VFRQbHdWaGJ3WXlyMWlJdWRWcUIrY05TLy9wd3J3WUluL1NTYlo1cjJCamdhb1V1NjIzZTcxWQprYTR5VnB2K0JucWxieHlGOXNFWTMyWUw2ZlZEN08xdzF2TWJ3eFlTSUxFcDBTNlAzRFB0b1pPK21BMHRLRnBQClBtYytlai9XMHU0dHpwS3ZhNWhlc1d2VGpvUVRQbWZWOWpMaVMydVhLeFB1Q2NnSUdiZHdyV21lemVVcHo2cHQKTEZMSWhpR0VsK3BVeUVXdkN3a0JISGFoOWtFblNlUU80MkdDK3MxYUEvRGhqL3I5dnVFRCtDQ1o0VHlRVzJ4VwoxQXQ3VnNKNUdnU3J0UUxiVHZnSC9HNmNMem1jNytwMC9rQnhHOUN6VFBUMkdCcmtxZDBMZk1oSWVKRmQKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    },
    "etcdServerCertificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQVBsQjd4c2Y4QmVCdUdNaEhMVXlqSlF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ERTVNVGMwTnpJd1doY05NakF3TkRFNE1UYzBOekl3V2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa2MyVnlkbVZ5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBMHZyQ2ZwUTg2VlZqaFVGeVYrOXFjT2NUS0ZkTXFyelRTUjA2cDFINzJkSGY5UHN0L3A5eXM2a1MKcW1mR2xMRjA2SFYzOTBQY3ZESVF5bWF6LzNSMWoyRXV6cGZ0ZmQyNHJVMEZFZHJZd2hBdUJaeGNFWGFPY1gyNQpKVGc5Z2NBZXhoZ1NOTGVBS2NuUmI5dlg3L3lYN2ZldWNxTXgrQXlMeE1yTUptUEd3ZDZHY2wzV0lqSDJiSVVoCjV5ZXFlMTRseEZKWFhxWGxqK2h6SVlWcFp5YnFpOHRxS3ZkTDNOTHpSUWZycDhuMDNzc1BUb2JSdFQwVUV4RWwKdEp4cEFxek1XOG9LYy9MMDlsQ1lRVDUwNmFWQ3RxdUJMYTVHUy8rUVNCcG5oU2hQckhMRjY3NEhQbzdyQUhGWgpJTk1HTU0vVXZ2N3grakVvdEVtYlZUWnZBOUo0RDZHWVBsRWgvKzBTR1picVZmU1NuWVZYODJ5SkVhN3E4ZVI5CnlORTBweTdpWFV3V0FYcXJaZE9TZ1pzWEZ1UE45WVNrSW5KMmsxWlRCNTJncDRPNjRYY1VHMURXOTVCVzh5K3YKQmhNbmNFVGdLUDBRS2d2SUdWNTZaYjJaWjZiKzVuY2pkK1hnbUwzRTJjcVpnUk1WOWdXOWVPRk5Ram5BZUtXdApKQ05mRmNTV1BabnpYRkNQWS92a1BXT0JqbmNHS1FuYjF1aTFrOEtGanZWcWN3SnF4Nk45R0tyaTkrYkxZdHNTCjFRaGxWOWM4MUxRWVUvL2k0Q2hnSUVCR0FkZ1Q3MDdMVEFJd3JHaGRFS0R5eG14eGI2aFo5VWhBVlhybDdtdncKcEJSZUU3WDRYNlFjamxwSzlFZXpqeUNrR1lHN1JnTGxiOCtkREV1Q0VpQ3BTZHVoc1FrQ0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkFyLy93V0hCQXIvL3crSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUwzL3hjZlIwVCs2Z0Z5NVRJT0h3TzdzakxERVFMQk52WFlqQmxhbgpJZ3lQZTlyMlBHdnI0dldBS2lJbnJpS2RDQWxLZzAyUHdHb2prNk9RM2ZidXFLT0lYeXdJeVNuOGFBUHdDWW9OCmFBT1NpVU9DK0VpODlsQ2t6ajlOTDZROWtMSzZST1pQWWxKNHVvcXZxazFSYnNpajFlTGNBRUZaWVMxd3BoU1YKZFNITGN4SGtsK0hRYmZwazUzRys0eDdOSndoeEVRVGpkTWlFQk9GRUtzR3pRQjFOTGtpdVYxS29SU1JYVFc0YQpaa3cxRFdpZXRoZEVjdjg2ZW84RXVCSExsbTBrazhnd2RISTRDdC9hQjF1enZTY0F5TDM2SU5MdFNCaHIwRDRsCkJETjUrUVpsL2NqeEt4bE9EMDV6OTVBSEp2VnlFUnJUL2ZnSE9LanZnNU5ReVFhQXNLVTk2WGkyNWNRWlE2OEYKWmpESnJOZS9ZWkVPRlBUM094SjF3ZzJpNGZSUlNPcXdyVGE5SDFrZTlCeXdTUWdSbWZoM3dob2k5MjBrUFJCUAo3V0F5am5uWGl2cElSL3FKYVowTjdnZ3dJcFFoRTdlZlFQYk5yRDM4TnE5c2QrVzZWc3QyMlhpRXB5NVFFUldKClpTSjRBaVRONCtGd0xoTW1OOTJIU2xNRGJDdDZBYTRzRFRaRHVBTFNEd3prQWdmZVJUaWxldTNwOXlyWGRZL2cKMUVKQlh0UjNjRkhqYjJvNjc4UExHa0d4aVJsYlJ5R0s3ZUdpT1ZCbmJJU2VQMFlEYVVJUDU4SmdYenArQnphMQpJL1pWdWx4MXhHd3BlL1RvZWtVM2hjWlRndjk3QVNveGk5R1dzNFNOTTMxVnkrWmFvNk84enY1WHQ2UVZmaHFICmxvbmIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    },
    "etcdServerPrivateKey": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBMHZyQ2ZwUTg2VlZqaFVGeVYrOXFjT2NUS0ZkTXFyelRTUjA2cDFINzJkSGY5UHN0Ci9wOXlzNmtTcW1mR2xMRjA2SFYzOTBQY3ZESVF5bWF6LzNSMWoyRXV6cGZ0ZmQyNHJVMEZFZHJZd2hBdUJaeGMKRVhhT2NYMjVKVGc5Z2NBZXhoZ1NOTGVBS2NuUmI5dlg3L3lYN2ZldWNxTXgrQXlMeE1yTUptUEd3ZDZHY2wzVwpJakgyYklVaDV5ZXFlMTRseEZKWFhxWGxqK2h6SVlWcFp5YnFpOHRxS3ZkTDNOTHpSUWZycDhuMDNzc1BUb2JSCnRUMFVFeEVsdEp4cEFxek1XOG9LYy9MMDlsQ1lRVDUwNmFWQ3RxdUJMYTVHUy8rUVNCcG5oU2hQckhMRjY3NEgKUG83ckFIRlpJTk1HTU0vVXZ2N3grakVvdEVtYlZUWnZBOUo0RDZHWVBsRWgvKzBTR1picVZmU1NuWVZYODJ5SgpFYTdxOGVSOXlORTBweTdpWFV3V0FYcXJaZE9TZ1pzWEZ1UE45WVNrSW5KMmsxWlRCNTJncDRPNjRYY1VHMURXCjk1Qlc4eSt2QmhNbmNFVGdLUDBRS2d2SUdWNTZaYjJaWjZiKzVuY2pkK1hnbUwzRTJjcVpnUk1WOWdXOWVPRk4KUWpuQWVLV3RKQ05mRmNTV1BabnpYRkNQWS92a1BXT0JqbmNHS1FuYjF1aTFrOEtGanZWcWN3SnF4Nk45R0tyaQo5K2JMWXRzUzFRaGxWOWM4MUxRWVUvL2k0Q2hnSUVCR0FkZ1Q3MDdMVEFJd3JHaGRFS0R5eG14eGI2aFo5VWhBClZYcmw3bXZ3cEJSZUU3WDRYNlFjamxwSzlFZXpqeUNrR1lHN1JnTGxiOCtkREV1Q0VpQ3BTZHVoc1FrQ0F3RUEKQVFLQ0FnRUFweVNpRVVXL085dTZERWZkSG0wK0ZsUDZpV3NnQWVPMlA2WTRZWFpCNEQ2MC9wQS8wQWppQmhOYwpCa1JRdmx3WUVsRjl5UmFxT1M0d3Z5aStVUk1pVDRUZVlDMWNxT3FPOUR5Z1Y1VFpSR1V0RUtUZkM3YXhBcGhuCnBXVDQxV0l1L3lEeXkzRFV5RVpxOWdOay8ydE5zZWtXK3hydTYyU0ZGbExUaVZaaWtCU0t6dkFvUk03d091aisKQXZNWnpNSzVpTjd5K0xqVk5UMGllTndJdFAvUHNSQmwrOFFQQmRMWmgwYlBHdzZVUUN6KzQyZExuQm5YWFlPbwpLMzMrYzNBU05tWEtBakhvZjNzNkkvWW5DVE16dHlRSUl2aCtHSmRPNXRDRVVxbXM5U0c0U3hzeEFnNlhmckpOCnVnTjBWQmRTcEQyMTFsQTd2eGpSUnFEcE1rMzdiblVtWU1ZU3pFVWhpSEFGQjlONUJ1Y25mb0RDYmNJcHQ5ZGkKOWw1NHV1NmJIcW5FcjNiUFM4UUxNaUd3NXpqNi81c0ZOaDRLZ0NWemVVb2FTOFZnVjM4YmJ3cjZpVFNZRXFvQwo0MmdHRnJ0eVo4Z2hwMFZ2MUtCMWNCSnRsQUYyejdSNDNVVmIwSEljcEg2QUszVHV0V0Y5N3lhcE4zUHhTcEljCnJ0NUFPQU1DSHpOdGNVbk96aTVHVkxJaGQ0NGJRb1E3NjdOM09oRldDcDVab0FQTGFDdFFoMWxWUDlEZnVzL0kKZU5IUEE5Uk9iOHk0ZUJXNHBKTzFOTlREc3kyMCt3N3JJQ1h5THErNXJlQ2hVQ2pXdkl5eEJ5N2hjbFdZN2xpNwpaUGNWUS8vYUFTT0drWjFYa3o2Z1R3c1lyTG9pMW5oWVpJak1BV0hrSUZXV1NlZVVrRUVDZ2dFQkFOVU5GWmlSCjExdWVGRFFMMTlaWURhMk92OXBwaGY3KzFkVlNuL2Frc05YTGVMYmkwcUhnRlhIOEs5Z0ZQWFpmZVkwM2VUQnkKRFF0Y0lNR0poYTBXT0hTWXRTNmZvdFllL1dQOUwvSVQ2TnJ6QkxTVjVRYXF3bkMxN3JScTd1MVpwLzFkaWliNAp5VmZ1QU5QeDVMOUdCdzQvRWlBZ3FYWWVlaTZ6dmFtY21US1pNUTlIcDk5RXBXRTE0TmlHaSt4V09TdXBvZ0tZCkpOOW9BQjFGNmExcVArdnBjRVZXbG42Y1d0VEtOcXRHb3pwRGF6OWRzTGZXQ3RucDM5bmRldDNadVF1TmI4K3gKL1V5Y2h0Tm9CV2tIaDRtWnVKbGVsNk1YL3k3QzQrYmtzMVljY3UxV1BVb3UwMXZOa1VHOU9zLzZGdGNqdmlLQwo2d1g2bGxpSnF5SjQrTThDZ2dFQkFQMkN4SGZ2SVpZeWpjZklYVllvY2QwVVd6WktPNWN4VTRPT3p6b2FjcVMzCk5rb1VYc0Z5M1d2UEJ1TUJaV2pZVUNjTTloVFBjSzFTdkpZWXdvcEwyRVNUOFd3L1J6M05RNmFDZzhyaGhMbFMKK1R4Y1gzNEUxWGZHd0F5K1FlYWpnTEFxV1F1elBZb1FlK1dETVdmTTRvQkdFZ0RnWmRDYlM2Nk9hM2lBZ05CLwpybEdtUFBkbjBOZWtLNEtXZEo2aCtHUUFsYk5mdHFLcFN3NDlvYmpTUGNOeVJpRVdqVDF0WUU0M09HTHJVZWVYCjlqaCtxRUt1bGtwNEdsTmFoa0t3Q0FOM3NRbnZBRnMzd1BtNWlEMnVDcWhFNlhRNU9hcWZtelpZbVlKUFdoM3EKbCtzeTdIVkgvU2RKRnZzSEdQc0x6OURoV0RWWDdoVDcvblNmNWcwRy9xY0NnZ0VBV1UrSDJ4SmdGZzc1Wnl3RAp5ZDNWdGdqZVVoL2tSUlhzNitVY0c1ZkViWXREU2w5aGJ1eHg4UHVHSWFOb3RZT21mOVZlWHptZ1VEL0psM2dmCjZvUWpISFdibGpUalhTRldsYURnaFhsbEpzdXpFRVM1NG9hWXhnanVUUUY2c1ZMaFFpd0JLdjhsNEU5c1YyelMKdUlBUm14NURhZVpuUTVYWklGVEcwQ0JPZEZDVnFWTWZnMC9TaUNLKzQrWGJLREtvK3EyOHRadXo4VmMyblE3ZQp1NHlMeVVodGdST2dPT2t3aG4xU1Y1QmdBcCthaU5Dc3NSUHdMcE9FL0Y2RkVCVWlKajZmUFpEZW4wd0tsUHJKCk1kTXZOVGFVbE81N1lLcEJsZ2VxNC9MQlh2ckVEc3dWRzFEdjEwOGdjazl5SlJjd2xmVnMwaWpSZndzaUZYRjQKcFJYVEx3S0NBUUVBMlVqMzlJUTJHWEtES3pXRktvL0g2R0hHUENZc0pVN1Y4ZkM1bFdlTjA3aGxBK0dweGMwYQpFNG1Dc1pkRXdEU0huckR4U3F6eU90eXJYMHNoa3orbXdrQzdzTGdiNjlDL3B6dytrZW54eEpabG9XTGJSandHCmEzOGlwTWw5MnAxUmM2MFlYWHJueUNxUXh3dEhrVngrMXNzNEt5QXFwRDQzQkFwMSt2YkpjZXUrRWFXV284ZUwKclFpOWNsUmE2SXlUUmNOcWpEQUJiaklFYnRSTWhRbE9mdkszUVN6L0tpTlJaRGpZVDVDNnh2SHN6RWRqR0tSagpsTGlVZDlVak5vMkNrTlpLRytXS1BLVHc5aG9idUNJd2FFR0loMkYxRjlWdFI0dHhKOHV6eGVpSkJjTEVBVklPCm5WbDhKUFRVYUhpYlNzR2F4VDMwaG0vbWpUZHdDc0p3Q1FLQ0FRQjZqNTNmdGJ6VDNGSUozT1BYR2pXRE1KcUIKbTZ4MWVGeFBkTUJxdkxXeVRDdTVLVUR1VGl0SzlsUldzQVo1c2xiTmVlVXBSN0dRREtjZzRTOHZ4KzRNNWtnQwo0ZkVGQytwNDMwZXpuSTdyZ2hBcWlkZkpMU1JBWkRTSTVjK0UySkRJSFBGc2twY0t2a2xqcU5oSjVTNG1yRjVsCnpjcitlb04yTG1vYjAwNm82UzVlMGtOMUVhTWd4ZWg1WHFEY0xFNzRIKytPMmI2Y0lTWkFQMTBNMEFQUWdQb1YKcDUvbnlkN1hadFVLdXZ4a2FEZ3NxbWRYR2cxNGR1aWZzRjdLdmpUZy9XSjhKeCswVnprWWxNL3FiOWJIaHViTwpSNW9jYlhkcU16WFpTdXFqWnozSElRZTUrc1J3cldTZjkvVjZuS1ZMVHJ0UTVuUnBJMWRpaHhJMDJhSHEKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    },
    "etcdVersion": {
      "value": "3.2.11"
    },
    "firstConsecutiveStaticIP": {
      "value": "10.255.255.5"
    },
    "fqdnEndpointSuffix": {
      "value": "cloudapp.azure.com"
    },
    "gchighthreshold": {
      "value": 85
    },
    "gclowthreshold": {
      "value": 80
    },
    "generatorCode": {
      "value": "acsengine"
    },
    "kubeClusterCidr": {
      "value": "10.240.0.0/12"
    },
    "kubeConfigCertificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5ekNDQXQrZ0F3SUJBZ0lSQUx4ZU8rQ2hCbSsrYkwrN1ZadjJjRVF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ERTVNVGMwTnpJd1doY05NakF3TkRFNE1UYzBOekl3V2pBcQpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVBNQTBHQTFVRUF4TUdZMnhwWlc1ME1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXkzYlJXbzBuY1JIMWtoYVZ0bzdTbDYza0EzcXQKY0dBUGFCSUxhZ0JmcGI0V2VHTXUzTGFXUUtmTS81R1lweW1jMm9KOFJvWGxTUis4cG1IK05TZnJmSGloOGluMApHT0xHL2ViZ0NMUXdMazV3RmxuMVV2Y0pCSW9melcxWXMyRnMrR3NrdVVCS2ZPNHhBS3pNUmpBNktPc0k4L3hmCnNiWEVpNUl2TFN5WEt1ck8xbnMzZVBURjZLV1BqdnNsMkZiRUNCSUF5SFZpdUhDVXdXRGc5eVY3c2x4MGpJQWoKNFd1dTNFN3J3NXRJZWZsbUtiUXpuaFZZbldEdjZnRis1d1dmelNJbDZkNWdLZ1VSYU9jNzhybjZsbHEzYS9BSwphMkpNU2k4NHZESnhldThzb25HSHl1c0NPcmxDS2dTQjdqaE53ZEFzWE1FTUVFYXM1M28rcHRIZEkrZS9MQUt1ClZ5RFlWS2FnR0MydnlEenBSVTFXdHVPNzFsTWl0M0dsOTJtaitkaHZ4c1FTZ1c5VnplOWZSMk1TckNnYm1CUSsKUDIvYWpuUUo0clc5eCtKeWtmaytMbmp6d1RqOUlzb3ZORUw0WnJubTVSZkpSbUNab0VXU1JKUVJFczlDaUMzZApJNVNkS1lJWERqNi9pSXdOVUVTQTEwRXJMMXA1aGE1QTZVNUxOdGxMNlBleEd0UkxXaG1hWkQxZTdvWmYxODcvCjd1NGhKekRaeDJqRzlLUUhoMHpyQUlkVWRMRmI1Yk9xc3NGd0ZRUjJjbDJDT1RUTHM2MUJiOUdpUklRMkxvMFoKT2VDSm83ZllGN3lhbld4Vzg3SWRpRjkrQnVIK3dCczVzUnpTdHNyTzk3WTdNbUp5K0NsZjNIaDJhaW9teVlPdQpyQmVNUHlhbksxenFrMDBDQXdFQUFhTTFNRE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUVGbHd5cmcKeW14OGZqSmQzUE1XdWV4T1NNTzVSa093d2NhOGlRWEhRRXE4c09ncXd1anVxTUNvVGp3QkFkSlhZQXJ4akFUNwpVc0R6Z1c0OXYxZkduaTh5MTd2YzQwc3NEOHl2YmQ1RjA5enZoK1hLSldGUXNzdWIxYXB2Z0ZWcStOb1pKWlF5CkpoZDdrRERxY2dqODZIaXp1REpjWEs0d1NkSDNlZlhtUEorTitPYVVpZkRyNW1raitEbDA5SGhmQjIrblFSdSsKWERnZzVvMUwrTHRySnVBb0lkRjlsWFZPTlVFN2lQdDI2Q2lha254V0phZTRndS81QmN3amphaTdGT0lGcHlpQQpUN3ArWHp2eWc3WUk5VU0xS2xVWCtoaUI0TTB4NnBGUTJ3dGUraUxacUJKRGYxcEZ6aDh1YVBFVnE2aHNMMmhhCjNaNDgyMTZsaXluUlk3VUlzRkZFSVpOZkhzQjdUbStnZEszakExQktGaU50TUo3MTdObURQNEJ6Z3dYUy90T0cKdTEyd050K2dpa1BubkJ0YUpwSklhZmR3bnpyK0NaaEhoYVBEb1dYUEhvTDM3STRoSmNrYkZwVGNpMDZrRlFHSgpUb29aNlBrRjdMMDJXT3YvUjRYeUp2V3V5MmU3MzlCSkZ5ek96UUZMRWY0bUtza3J5SFFHZU9jK2NOMHE5S0s1CkNlcDFUUmUrVXZ2V0NweWFTOWdWOStRSjJYQks0VUVOdlVQcUlrTkpac24wRldZZSsxSWRNN3N0UXdIM3dPOWwKQzZPSlM1d1dmUVpFUmVJUWU2Rld3L3dTa2lWQ25sR2dEUGhNRXBmVStXMVdZWnk1ZTZjTnJmOG9XenFLOU9VbgplbnNnN2lRSDlBSjl2QUp0Kyt6RENWaTZEYXdoWDk5NHJHOXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    },
    "kubeConfigPrivateKey": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeTNiUldvMG5jUkgxa2hhVnRvN1NsNjNrQTNxdGNHQVBhQklMYWdCZnBiNFdlR011CjNMYVdRS2ZNLzVHWXB5bWMyb0o4Um9YbFNSKzhwbUgrTlNmcmZIaWg4aW4wR09MRy9lYmdDTFF3TGs1d0ZsbjEKVXZjSkJJb2Z6VzFZczJGcytHc2t1VUJLZk80eEFLek1SakE2S09zSTgveGZzYlhFaTVJdkxTeVhLdXJPMW5zMwplUFRGNktXUGp2c2wyRmJFQ0JJQXlIVml1SENVd1dEZzl5VjdzbHgwaklBajRXdXUzRTdydzV0SWVmbG1LYlF6Cm5oVlluV0R2NmdGKzV3V2Z6U0lsNmQ1Z0tnVVJhT2M3OHJuNmxscTNhL0FLYTJKTVNpODR2REp4ZXU4c29uR0gKeXVzQ09ybENLZ1NCN2poTndkQXNYTUVNRUVhczUzbytwdEhkSStlL0xBS3VWeURZVkthZ0dDMnZ5RHpwUlUxVwp0dU83MWxNaXQzR2w5Mm1qK2RodnhzUVNnVzlWemU5ZlIyTVNyQ2dibUJRK1AyL2FqblFKNHJXOXgrSnlrZmsrCkxuanp3VGo5SXNvdk5FTDRacm5tNVJmSlJtQ1pvRVdTUkpRUkVzOUNpQzNkSTVTZEtZSVhEajYvaUl3TlVFU0EKMTBFckwxcDVoYTVBNlU1TE50bEw2UGV4R3RSTFdobWFaRDFlN29aZjE4Ny83dTRoSnpEWngyakc5S1FIaDB6cgpBSWRVZExGYjViT3Fzc0Z3RlFSMmNsMkNPVFRMczYxQmI5R2lSSVEyTG8wWk9lQ0pvN2ZZRjd5YW5XeFc4N0lkCmlGOStCdUgrd0JzNXNSelN0c3JPOTdZN01tSnkrQ2xmM0hoMmFpb215WU91ckJlTVB5YW5LMXpxazAwQ0F3RUEKQVFLQ0FnQUpySUNQdVo1aWRlUWpLZ2U4UWxZbytBK2JTcjNzVmVUbG9kWUJHRHR6K2ZHL2o1ZXV6cytlQzF4bgoybGhUdWxyRzJPVm54UDM5MkJCMEtMeVpjbWh6NXBoc2x5b1A5TmhaUWh6c3pRUnRielZOR3NIYlMvdVZ4NnR6CmJQdUdxOTh1Z0ltaWRUZ1ZjSTNMNW10Zit2TUk5d1BaOWVubTNTbVhLVUFzK2EzR1VKdTgvdWJJVFhzTGNMTysKckpwRUN2d1BGaXdMVytseHM0aWZHU2daR0NNbGU5ZmV4a2p1Y3R4QmhVOFlZYzIwWHZOSWtGVFQ4MWZmUTdpawplNlc0L2o5MjFXVFFGYzZrc05EL0Y5OTF6dm5uSkRFTVpNRmFFYlptNEkvbUFzLzZkRnkrN0g3MFd2QWtNcUsrCnRMQW96MnlEQm83VmFpaFVyY2VTeWZFb3BWbktRWUh0bTVDTHZzdk5KYi92MnZnMVZNblYxVnBQOFcyRzNjRTQKV1NkK0VITnhobVFJdjlYeGZDa0VHK2NDN2szYTBKWHZ3dDBCaEl4Zi9IT1BMUG05ckpmVjNQNW93UmVhZEptVwpUZmpVRERUbXBYYTBFY0NkZWl3MGczYnFXTkRkMVBTUXJsa0sydDBsYjNaNCt0ajNLeGRoczFuZkJmenpWUm1tClJZSnRJU091YmJBYWFNUllEbGdkT3dxaE11M2w4WUl6bFlxelRzeFJvQXJPRytYUVN6T1BzZ1NFMWtHYWNvVXQKdmgxQmdCWHZnZWM1VDIvbXlNZVVXUHBRRWRicXVGQVR1NG9CMnV0UlhLUm5hYmFQTWltOXM2Z0RUVmxoL0k0WgpIMXFETzJzeWdmOUZsdWlBa0tqV3N1cEY1TGFZcVVzYk02VU5xOFp2WDh6dDBpWGRnUUtDQVFFQThXV0ZGQkx0ClJoekZWT3VaNWFkVW9HRTgwR1ptQVdsVnh4SE9tcGorV0Vab1VQSjFob1M1emcrOWU1d0ZidDNVRXpmNXVnancKU0ZZYWFLZE1zVmd5ajh0MWJQQUE0MU1RSG03dnNxTElmOU0yWEViWDBTZUJsL2QyYWdaS1lVMVZWL0FjTXJlQwpUR1ErNDJENW8xcHNIVmlhWUlkZUlWV0JnTGJPMEEvNXN1MmxDbGlsZmVNZnNlK0ZBOXF5QlVxRFIvcE9DbVAvCjBBa2dyWGhsUXFKTFBsTm44TTJTb2VGQ1JzM1d4MllkMlg4dURzNk9LTDVPLy81ZERqOGsrRXdPcjlLT0RlaWUKYTNtMGkrTUlsVkdSbkRiZTZJeUVIUWNYTG0yS29jSDVQZ0JEU1dQV2xFb3MrWVFKTUJqU3E4UmU0TjNYcFVjWgplN2lTVEJHSmVrWjd5UUtDQVFFQTE4WFh4bFoxYVJDdHdRVTBHZ1VrQUlDV2hYaVc1eUdEUERQbVdEYkZ6b2ZNCmlBVElOc0tVaFNLTTdSa2YvMUN2ZGNXdllBOThZSXI3WHVUQXNkWVZuOEdIU0pZQTdxZjFjUHNRbjFlc3ZzdVIKY2VPZmVpdUd4ZDNBdVdxakltWGRNWFRMQ3h1c0ltNGhIelkxWEhldFdoOGUwNVFQcFpaNWJqZ1Y2UHArN0hnNQpTNTdNY1FpOHpZOGlEWXRzd0RTTmVEa1ZkSkN3NGxDRHNMSU1lK3ZMS1pPdDJwNVlUcjBVZ0VabGFPWk1LMXNVCit3U2c4cHlnTlpnQ0hrd2xzNkRETThvbm1BWEZjZ0liM2tHZjUxNnBLbXV0SjczTG43ejlCQkxnNWZIQlBleVYKUVlUTDF0ZkNtbkRMTEhhZmFHeVhTa28zK0FRNEt4bHA5WUhJRlBKVlpRS0NBUUJlaHJGdzVlUng0d3hHcjZkbwo3WGhQQVNTdU9wclJESzFoTVpEa3F1cFdLT1BxWnJjc3dNWjljVjV5aStyNHVmYTB1K09YUEs3U3RKek14RTVjCjE3dWM0VUFQTTRBMWhDNDRySnBDS2tvMis3ODZyU2NQcU5ldmFXQytMYzVzZ2JyY241SjdMYTdoT1JRRE45TXAKYTF3UXRjUmw3andtODNPdHNtZ1R3MTIwK2lmNWdETDFzNzJTa01kV2Rnbmwxb0xINmJVcmpuTDZ4TWcrQlhvcAplS0hjT3c3bGxhcElwNHVyYkNraGxkUTBlZi9RSG9RK1loOVBVUXloYW9xUWpEL29DNXhDeUFkWThLU0picExLCjNkRVdDY3FKNTVSSVJhR0hOYS9tbmExNjRPRjRXSmNMSkd5dUhFejR2NCtuWVZNQjNQejNwSHJQSHJ4eSt4OEoKZVpZNUFvSUJBUUNPbHZxaDRrN1NzS2Z5VDJyLzZ2ZkFzVGxIV01wNFVVZzFoNktvRndJZkd0VEo2a2NaRVBzdgpCQWNYUkN4Ri85OER1RERPRFUzSFN2RVU0NXlIcVE4L05KZ2ZHcW5oRFBPQXh4bFVBNDl2d24wS1F6OEhjQzR2CklmMFRTdW9sZUNWMVlsWXZzQWpQOC9GRmZBQkZhLzBOK2xUWHd4ZVgrTm1rUWNJUTVVRHRLZ0hLL0ZUa09iN3oKSkt4L1FPME1FMjZOelVObGRaeSs0akEwbTJUdW00TDFwZGNWQ3VFV241TWx0ZCtjTTl5UUppKzJObmZaL0RGUApXWFhFNmROY1lsZTlLTkdEZ0FUYjg1TFJESk1NUmgwS29IK2NMS3Vja3pxczc0RFoxQ284cnRSdnFMOC82Zk43Ck5pQzk4R0lsa3VWanZhcEE1eURyTW04NFE1eWlZd2FWQW9JQkFCV25xSXZiS21QRXhDemkrVXhidS9XVGs3MUkKSmVFQ1JWZkZZYXRkY1J3RU9FYkFwNzhoSUhrWXBxTmtlMEVaVVBpa1NaeE56elhwQzRwekhWdThCSUozQnlhUwpJbGdYSDRPYkdxb25XMS8yUEQ2VzczcU42Z1djYnlmN3BhVDYzT3dMeWpFbDdSQkJaTmpTS3NMVUhJSWFpRDFLCmNtWGxmWFJMWm14MndKLzkzNU5CSStPRmdOcVhTYlVpdHVoeDRTUEVaVnA1Y2tJSkEvY1pkQWtoSlFuakthQysKRzNkL2JlUkpIMVFhVS8wU0Z6azR5RHlSMzZzaFFXS1Y3RHFualV6YjBVMHo0TXBYMHA2VGtvTXhGL1BObHYrVwpwQ20zdVhIcmpwdll4c251ZVVaNU1Fd3A0QlJPcHJUN0FGOFY4LytYZHNxTjMvWE9ibDBzWlNlcUtrTT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    },
    "kubeDNSServiceIP": {
      "value": "10.0.0.10"
    },
    "kubeServiceCidr": {
      "value": "10.0.0.0/16"
    },
    "kubernetesACIConnectorCPULimit": {
      "value": "50m"
    },
    "kubernetesACIConnectorCPURequests": {
      "value": "50m"
    },
    "kubernetesACIConnectorClientId": {
      "value": ""
    },
    "kubernetesACIConnectorClientKey": {
      "value": ""
    },
    "kubernetesACIConnectorMemoryLimit": {
      "value": "150Mi"
    },
    "kubernetesACIConnectorMemoryRequests": {
      "value": "150Mi"
    },
    "kubernetesACIConnectorNodeName": {
      "value": "aci-connector"
    },
    "kubernetesACIConnectorOS": {
      "value": "Linux"
    },
    "kubernetesACIConnectorRegion": {
      "value": "westus"
    },
    "kubernetesACIConnectorResourceGroup": {
      "value": ""
    },
    "kubernetesACIConnectorSpec": {
      "value": "microsoft/"
    },
    "kubernetesACIConnectorSubscriptionId": {
      "value": ""
    },
    "kubernetesACIConnectorTaint": {
      "value": "azure.com/aci"
    },
    "kubernetesACIConnectorTenantId": {
      "value": ""
    },
    "kubernetesAddonManagerSpec": {
      "value": "k8s-gcrio.azureedge.net/kube-addon-manager-amd64:v6.5"
    },
    "kubernetesAddonResizerSpec": {
      "value": "k8s-gcrio.azureedge.net/addon-resizer:1.7"
    },
    "kubernetesDNSMasqSpec": {
      "value": "k8s-gcrio.azureedge.net/k8s-dns-dnsmasq-nanny-amd64:1.14.8"
    },
    "kubernetesDashboardCPULimit": {
      "value": "300m"
    },
    "kubernetesDashboardCPURequests": {
      "value": "300m"
    },
    "kubernetesDashboardMemoryLimit": {
      "value": "150Mi"
    },
    "kubernetesDashboardMemoryRequests": {
      "value": "150Mi"
    },
    "kubernetesDashboardSpec": {
      "value": "k8s-gcrio.azureedge.net/kubernetes-dashboard-amd64:v1.8.2"
    },
    "kubernetesExecHealthzSpec": {
      "value": "k8s-gcrio.azureedge.net/exechealthz-amd64:1.2"
    },
    "kubernetesHeapsterSpec": {
      "value": "k8s-gcrio.azureedge.net/heapster-amd64:v1.5.0"
    },
    "kubernetesHyperkubeSpec": {
      "value": "k8s-gcrio.azureedge.net/hyperkube-amd64:v1.9.3"
    },
    "kubernetesKubeDNSSpec": {
      "value": "k8s-gcrio.azureedge.net/k8s-dns-kube-dns-amd64:1.14.8"
    },
    "kubernetesNonMasqueradeCidr": {
      "value": "10.0.0.0/8"
    },
    "kubernetesPodInfraContainerSpec": {
      "value": "k8s-gcrio.azureedge.net/pause-amd64:3.1"
    },
    "kubernetesReschedulerCPULimit": {
      "value": "10m"
    },
    "kubernetesReschedulerCPURequests": {
      "value": "10m"
    },
    "kubernetesReschedulerMemoryLimit": {
      "value": "100Mi"
    },
    "kubernetesReschedulerMemoryRequests": {
      "value": "100Mi"
    },
    "kubernetesReschedulerSpec": {
      "value": "k8s-gcrio.azureedge.net/rescheduler:v0.3.1"
    },
    "kubernetesTillerCPULimit": {
      "value": "50m"
    },
    "kubernetesTillerCPURequests": {
      "value": "50m"
    },
    "kubernetesTillerMaxHistory": {
      "value": "0"
    },
    "kubernetesTillerMemoryLimit": {
      "value": "150Mi"
    },
    "kubernetesTillerMemoryRequests": {
      "value": "150Mi"
    },
    "kubernetesTillerSpec": {
      "value": "gcrio.azureedge.net/kubernetes-helm/tiller:v2.6.2"
    },
    "linuxAdminUsername": {
      "value": "azureuser"
    },
    "location": {
      "value": ""
    },
    "masterEndpointDNSNamePrefix": {
      "value": "architech-k8s"
    },
    "masterSubnet": {
      "value": "10.240.0.0/12"
    },
    "masterVMSize": {
      "value": "Standard_D2_v2"
    },
    "maxPods": {
      "value": 30
    },
    "networkPolicy": {
      "value": "azure"
    },
    "orchestratorName": {
      "value": "k8s"
    },
    "osImageOffer": {
      "value": "UbuntuServer"
    },
    "osImagePublisher": {
      "value": "Canonical"
    },
    "osImageSKU": {
      "value": "16.04-LTS"
    },
    "osImageVersion": {
      "value": "16.04.201801260"
    },
    "servicePrincipalClientId": {
      "value": "0819dfe3-9328-48f3-8845-fffaadf62b09"
    },
    "servicePrincipalClientSecret": {
      "value": "299d888a-4a49-4b77-ba1d-8fe546cd90e9"
    },
    "sshRSAPublicKey": {
      "value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDSCXIHXghl14Ap8Vu2LVRLIfBub9t2lIzlJNDexadR81AjRUxQutOLDb8KtrVNQX7OMjnaHkuXGHa1EUChQDmvWCgahj6DQuV5/8Z9LkxsOzlnlrMf4ayCIghbKHKbwhe8JtxK0lmzoQa+rwFzPC3ccaBJPMonvKQObCrNLqkObWT0T9+2p19dC78ostK8HfkxETx1nII48szYBMeKx+7HmmN/fqRYLZ8FsetMEky678Cm40awsKF1qDljUhnLwefTspQ86bpNHeEQ1/XJCTvMVUosZOYhZZiuq8zJmwey7QXpoYvb7oIdz254UHAb6syDJVuPLLbcVoLhOFMv4lu70ZOKNkOggz3Od21Mj/SlO0JX3Z6AY5AZpZa+64oHduKVrBHnNjhixFqeiHUmS5Tal+cuk1EcLbx7/UmaOK7ujQ/ilB//vLddobB3S8X9+eAF7vpq7by4c9s1/7vjm4GzfxXgGjGnc7au2z9d9TWX/HVRaqrSONy/lQ8qidu4HLhF31uy1iLaKfYMHkaE9oqsdg7kOvZiotR0Zta07Y15uSAznuqKur55tpIdPO9C/7JNX9AxujLM08MSrF1fs45AUQnCTCcnFqC7dREUU41Qyon4n1pOgGCwzVSt6mt5PHuktSHDvvXHSuFaJ8N/kyXwhe1Eq3xUWVSDUyhVWaHhHQ==\n"
    },
    "targetEnvironment": {
      "value": "AzurePublicCloud"
    },
    "vnetCniLinuxPluginsURL": {
      "value": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-v1.0.2.tgz"
    },
    "vnetCniWindowsPluginsURL": {
      "value": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-v1.0.2.zip"
    }
  } ,
  "variables": {
    "agentpool1AccountName": "[concat(variables('storageAccountBaseName'), 'agnt0')]",
    "agentpool1AvailabilitySet": "[concat('agentpool1-availabilitySet-', variables('nameSuffix'))]",
    "agentpool1Count": "[parameters('agentpool1Count')]",
    "agentpool1Index": 0,
    "agentpool1Offset": "[parameters('agentpool1Offset')]",
    "agentpool1StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpool1Index'))]",
    "agentpool1StorageAccountsCount": "[add(div(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpool1SubnetName": "[variables('subnetName')]",
    "agentpool1VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpool1-', variables('nameSuffix'), '-')]",
    "agentpool1VMSize": "[parameters('agentpool1VMSize')]",
    "agentpool1VnetSubnetID": "[variables('vnetSubnetID')]",
    "agentpool1osImageOffer": "[parameters('agentpool1osImageOffer')]",
    "agentpool1osImagePublisher": "[parameters('agentpool1osImagePublisher')]",
    "agentpool1osImageSKU": "[parameters('agentpool1osImageSKU')]",
    "agentpool1osImageVersion": "[parameters('agentpool1osImageVersion')]",
    "allocateNodeCidrs": false,
    "apiServerCertificate": "[parameters('apiServerCertificate')]",
    "apiServerPrivateKey": "[parameters('apiServerPrivateKey')]",
    "apiVersionDefault": "2016-03-30",
    "apiVersionLinkDefault": "2015-01-01",
    "apiVersionStorage": "2015-06-15",
    "apiVersionStorageManagedDisks": "2016-04-30-preview",
    "caCertificate": "[parameters('caCertificate')]",
    "caPrivateKey": "[parameters('caPrivateKey')]",
    "clientCertificate": "[parameters('clientCertificate')]",
    "clientPrivateKey": "[parameters('clientPrivateKey')]",
    "cloudProviderBackoff": "[parameters('cloudProviderBackoff')]",
    "cloudProviderBackoffDuration": "[parameters('cloudProviderBackoffDuration')]",
    "cloudProviderBackoffExponent": "[parameters('cloudProviderBackoffExponent')]",
    "cloudProviderBackoffJitter": "[parameters('cloudProviderBackoffJitter')]",
    "cloudProviderBackoffRetries": "[parameters('cloudProviderBackoffRetries')]",
    "cloudProviderRatelimit": "[parameters('cloudProviderRatelimit')]",
    "cloudProviderRatelimitBucket": "[parameters('cloudProviderRatelimitBucket')]",
    "cloudProviderRatelimitQPS": "[parameters('cloudProviderRatelimitQPS')]",
    "cniPluginsURL": "[parameters('cniPluginsURL')]",
    "containerRuntime": "[parameters('containerRuntime')]",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "dataStorageAccountPrefixSeed": 97,
    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
    "dockerEngineDownloadRepo": "[parameters('dockerEngineDownloadRepo')]",
    "dockerEngineVersion": "[parameters('dockerEngineVersion')]",
    "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
    "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
    "etcdClientCertificate": "[parameters('etcdClientCertificate')]",
    "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
    "etcdClientPrivateKey": "[parameters('etcdClientPrivateKey')]",
    "etcdDiskSizeGB": "[parameters('etcdDiskSizeGB')]",
    "etcdDownloadURLBase": "[parameters('etcdDownloadURLBase')]",
    "etcdPeerCertFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.crt",
      "/etc/kubernetes/certs/etcdpeer1.crt",
      "/etc/kubernetes/certs/etcdpeer2.crt",
      "/etc/kubernetes/certs/etcdpeer3.crt",
      "/etc/kubernetes/certs/etcdpeer4.crt"
    ],
    "etcdPeerCertificates": [
      "[parameters('etcdPeerCertificate0')]"
    ],
    "etcdPeerKeyFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.key",
      "/etc/kubernetes/certs/etcdpeer1.key",
      "/etc/kubernetes/certs/etcdpeer2.key",
      "/etc/kubernetes/certs/etcdpeer3.key",
      "/etc/kubernetes/certs/etcdpeer4.key"
    ],
    "etcdPeerPrivateKeys": [
      "[parameters('etcdPeerPrivateKey0')]"
    ],
    "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
    "etcdServerCertificate": "[parameters('etcdServerCertificate')]",
    "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
    "etcdServerPrivateKey": "[parameters('etcdServerPrivateKey')]",
    "etcdVersion": "[parameters('etcdVersion')]",
    "fqdnEndpointSuffix": "[parameters('fqdnEndpointSuffix')]",
    "gcHighThreshold": "[parameters('gcHighThreshold')]",
    "gcLowThreshold": "[parameters('gcLowThreshold')]",
    "generateProxyCertsScript": "H4sIAAAAAAAA/5RWf2/iRhD935/iHaAjSOfYJnf5QUR7yHF1UdIkNVRq1FTWYg94i3+Q3eUSdJfvXtmAYxPMXfNXPDvvzduZtyOa74wxT4wxk6Gm3bm3f9179sC7cu77jda38nevb6h4bsxF+rzU/YhTonSfHc5o+dLYAN1RCeWOaiC+UK+Q60vnZrRVr4jtIKgWXGXaQ/cN2h66u9C+FG/QFdVFbCc6V+6M7AvPdf740xmOvjiDC8ctYIOMad95r79i9EkoaQh6XJBUIbGAxGuH9AmPaFNorctZqdwKVemqjSahdhCtO12N7KGZ0XLDcnU69ApH2O7I++3y2rkbjL5khLWHvb5ByjdmizGJhBRJo1JlY4dX/JVzX8NcPtlLuzZJSVO92p+Vutap0fM8FQpZA+3RtefcXNzdXt6MhpuuVoK9fqjUXPYMw+qeHJqH5qHV6x6dnL00tnnsQS6jzLIO1akqWrfFtOlSmWoTq+Mi5QeV97Wtzlm3qaJvE/wJ1opSd3BzkZO1DuKZonje0bQmppSQYIog0lTBHmjpnBIpo+xASAY9XSi0yisJXfPjaZEm6BF6Qk/Qnz+ZZ9ADtpSwTrvHyEy8hayQuSPocjH+F23Dvunn07Zz2fagXRaWkWc326usWF516spiXpN3cNhDt6yLTaeCpkylwrjty6VUFPdiJhUJ2S7KrK6eF8vvf3JkQufJLmZ7UGmAPdjRJUnKkyQ4i2B2d2p0R5omSImlHwcen3gTxqOFoIMOvmGSCnBk1Q8kPcKCZXbOEaRofT7H32j9Cp0eYQL/4P17jAWxGb5/h4yI5jgys9SEzkF+mMJ5Jn+hKMBDo/X5oYEWh+IxyXO8aNqT4Iq83HSeSr2Ay1kmQAOA3IQqm5VCa99qxi9o1W6xGqpiL1XB5UW1F5k9oa2620WbcClOvxKeQq5IzplPmLMg4MkUTGFMU54k2Uc6gSUVIp5QDpQUQOdoW9J4kIbR3nO7OgF77+SHcRrg2DRrs3ZPxnviKvRyzxRDKpxioYsjfMQnHOMEpziDZcKyYHUzN+S52d8O2uLsR8b6lGdm1soENjGOUn+GRaJ4BBZF+azAJQSxYLnL28U0/WiRPT89JBapUGvidzZbnWJGS/kBmzEhIpb/V5rhmHy2kOv0pzRpKzDfp7kCw1cWQYWb6UpkHQNDW2/jIFzOQ0o67zQ+KYTEsx9Yu4HWgc8USj/OXjqNc6iQkopBC6ZXZ7/BFkvrpdPYB87NXYNeCVj5tDSV/XbRmricZJrziquCfhrHLAmQzYaCD6u2xcQSmSdmO41F+ShBz1wqqVEk6f8WnnDtvwAAAP//n9xaaCkLAAA=",
    "generatorCode": "[parameters('generatorCode')]",
    "kubeClusterCidr": "[parameters('kubeClusterCidr')]",
    "kubeConfigCertificate": "[parameters('kubeConfigCertificate')]",
    "kubeConfigPrivateKey": "[parameters('kubeConfigPrivateKey')]",
    "kubeDNSServiceIP": "[parameters('kubeDNSServiceIP')]",
    "kubeServiceCidr": "[parameters('kubeServiceCidr')]",
    "kubernetesACIConnectorCPULimit": "[parameters('kubernetesACIConnectorCPULimit')]",
    "kubernetesACIConnectorCPURequests": "[parameters('kubernetesACIConnectorCPURequests')]",
    "kubernetesACIConnectorClientId": "[parameters('kubernetesACIConnectorClientId')]",
    "kubernetesACIConnectorClientKey": "[parameters('kubernetesACIConnectorClientKey')]",
    "kubernetesACIConnectorMemoryLimit": "[parameters('kubernetesACIConnectorMemoryLimit')]",
    "kubernetesACIConnectorMemoryRequests": "[parameters('kubernetesACIConnectorMemoryRequests')]",
    "kubernetesACIConnectorNodeName": "[parameters('kubernetesACIConnectorNodeName')]",
    "kubernetesACIConnectorOS": "[parameters('kubernetesACIConnectorOS')]",
    "kubernetesACIConnectorRegion": "[parameters('kubernetesACIConnectorRegion')]",
    "kubernetesACIConnectorResourceGroup": "[parameters('kubernetesACIConnectorResourceGroup')]",
    "kubernetesACIConnectorSpec": "[parameters('kubernetesACIConnectorSpec')]",
    "kubernetesACIConnectorSubscriptionId": "[parameters('kubernetesACIConnectorSubscriptionId')]",
    "kubernetesACIConnectorTaint": "[parameters('kubernetesACIConnectorTaint')]",
    "kubernetesACIConnectorTenantId": "[parameters('kubernetesACIConnectorTenantId')]",
    "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
    "kubernetesAddonManagerSpec": "[parameters('kubernetesAddonManagerSpec')]",
    "kubernetesAddonResizerSpec": "[parameters('kubernetesAddonResizerSpec')]",
    "kubernetesCcmImageSpec": "[parameters('kubernetesCcmImageSpec')]",
    "kubernetesDNSMasqSpec": "[parameters('kubernetesDNSMasqSpec')]",
    "kubernetesDashboardCPULimit": "[parameters('kubernetesDashboardCPULimit')]",
    "kubernetesDashboardCPURequests": "[parameters('kubernetesDashboardCPURequests')]",
    "kubernetesDashboardMemoryLimit": "[parameters('kubernetesDashboardMemoryLimit')]",
    "kubernetesDashboardMemoryRequests": "[parameters('kubernetesDashboardMemoryRequests')]",
    "kubernetesDashboardSpec": "[parameters('kubernetesDashboardSpec')]",
    "kubernetesExecHealthzSpec": "[parameters('kubernetesExecHealthzSpec')]",
    "kubernetesHeapsterSpec": "[parameters('kubernetesHeapsterSpec')]",
    "kubernetesHyperkubeSpec": "[parameters('kubernetesHyperkubeSpec')]",
    "kubernetesKubeDNSSpec": "[parameters('kubernetesKubeDNSSpec')]",
    "kubernetesNonMasqueradeCidr": "[parameters('kubernetesNonMasqueradeCidr')]",
    "kubernetesPodInfraContainerSpec": "[parameters('kubernetesPodInfraContainerSpec')]",
    "kubernetesReschedulerCPULimit": "[parameters('kubernetesReschedulerCPULimit')]",
    "kubernetesReschedulerCPURequests": "[parameters('kubernetesReschedulerCPURequests')]",
    "kubernetesReschedulerMemoryLimit": "[parameters('kubernetesReschedulerMemoryLimit')]",
    "kubernetesReschedulerMemoryRequests": "[parameters('kubernetesReschedulerMemoryRequests')]",
    "kubernetesReschedulerSpec": "[parameters('kubernetesReschedulerSpec')]",
    "kubernetesTillerCPULimit": "[parameters('kubernetesTillerCPULimit')]",
    "kubernetesTillerCPURequests": "[parameters('kubernetesTillerCPURequests')]",
    "kubernetesTillerMaxHistory": "[parameters('kubernetesTillerMaxHistory')]",
    "kubernetesTillerMemoryLimit": "[parameters('kubernetesTillerMemoryLimit')]",
    "kubernetesTillerMemoryRequests": "[parameters('kubernetesTillerMemoryRequests')]",
    "kubernetesTillerSpec": "[parameters('kubernetesTillerSpec')]",
    "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat('master-availabilityset-', variables('nameSuffix'))]",
    "masterCount": 1,
    "masterEtcdClientPort": 2379,
    "masterEtcdClientURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
    ],
    "masterEtcdClusterStates": [
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
    ],
    "masterEtcdPeerURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
    ],
    "masterEtcdServerPort": 2380,
    "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterFqdnPrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterOffset": "[parameters('masterOffset')]",
    "masterPrivateIp": "[parameters('firstConsecutiveStaticIP')]",
    "masterPrivateIpAddrs": [
      "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
    ],
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', variables('nameSuffix'))]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterVMNames": [
      "[concat(variables('masterVMNamePrefix'), '0')]",
      "[concat(variables('masterVMNamePrefix'), '1')]",
      "[concat(variables('masterVMNamePrefix'), '2')]",
      "[concat(variables('masterVMNamePrefix'), '3')]",
      "[concat(variables('masterVMNamePrefix'), '4')]"
    ],
    "masterVMSize": "[parameters('masterVMSize')]",
    "maxPods": "[parameters('maxPods')]",
    "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
    "maxVMsPerPool": 100,
    "maxVMsPerStorageAccount": 20,
    "mountetcdScript": "H4sIAAAAAAAA/3RSUW8TPRB896+YL8nb14uTgioVKUWVACmCNhWEJ4Qqn713Z+LYx3ndpgX+O/IlTQ8J7uXkHe/M7HjH/8nSelmq2IgxrkLybH0NG2GCJzTUEayPTMogVCDWBiVplSLlc5lqNMxtfCVlmeo4dSp53bTKTD2x1C4kU1hvWf5fplrOz85PZ+cvxBgrrwncUM9gIyq7I3OCjlqnnhBy4R73lpv+2HMhc0E3ytcUn27n6tFFbblJ5VSHrbx8TB1JpWNBvraeZJuck2dn86mIxCh24s3y0/uFNHQno9Hi5vLjerlerq4Xkx8Z+TUXV6vP1+ub1fJ6vZB3qpPOljJnYGzciGToTpktIjE7EtuNsR2KFpPnLrHNieIn6o7+BGyFL5i8RkHfMcNXwQ15AQCkm4BRFsi5KNeRMg/oeciM9ld2ljETlRVjVNY5ZE+yiqxK0QuNnmaaj4bYUdPT3zQnxwCw/wZ+DxWVOOS/oUolx/HEh0pZd0Bnh//pCBcXQ+HeqW5Ib2ArtKpjyzb4PEjkKFzEs/a/XY4HnSZQhA+8p+hhGfMmx7qPrig83WOOSX7IAbzdVHFKO345UETxoV/s233nOxRv4dTjw61lVTq6zTu3mJ/0pW8hdV65Qy0Ptn/hQVS/AwAA//8o5bmvUwMAAA==",
    "nameSuffix": "[parameters('nameSuffix')]",
    "networkPolicy": "[parameters('networkPolicy')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
    "orchestratorName": "[parameters('orchestratorName')]",
    "orchestratorNameVersionTag": "Kubernetes:1.9.3",
    "osImageOffer": "[parameters('osImageOffer')]",
    "osImagePublisher": "[parameters('osImagePublisher')]",
    "osImageSKU": "[parameters('osImageSKU')]",
    "osImageVersion": "[parameters('osImageVersion')]",
    "primaryAvailabilitySetName": "[concat('agentpool1-availabilitySet-',variables('nameSuffix'))]",
    "provisionScript": "",
    "provisionScriptParametersCommon": "[concat('TENANT_ID=',variables('tenantID'),' APISERVER_PUBLIC_KEY=',variables('apiserverCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',variables('clientPrivateKey'),' TARGET_ENVIRONMENT=',variables('targetEnvironment'),' NETWORK_POLICY=',variables('networkPolicy'),' FQDNSuffix=',variables('fqdnEndpointSuffix'),' VNET_CNI_PLUGINS_URL=',variables('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',variables('cniPluginsURL'),' MAX_PODS=',variables('maxPods'),' CLOUDPROVIDER_BACKOFF=',variables('cloudProviderBackoff'),' CLOUDPROVIDER_BACKOFF_RETRIES=',variables('cloudProviderBackoffRetries'),' CLOUDPROVIDER_BACKOFF_EXPONENT=',variables('cloudProviderBackoffExponent'),' CLOUDPROVIDER_BACKOFF_DURATION=',variables('cloudProviderBackoffDuration'),' CLOUDPROVIDER_BACKOFF_JITTER=',variables('cloudProviderBackoffJitter'),' CLOUDPROVIDER_RATELIMIT=',variables('cloudProviderRatelimit'),' CLOUDPROVIDER_RATELIMIT_QPS=',variables('cloudProviderRatelimitQPS'),' CLOUDPROVIDER_RATELIMIT_BUCKET=',variables('cloudProviderRatelimitBucket'),' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' CONTAINER_RUNTIME=',variables('containerRuntime'))]",
    "provisionScriptParametersMaster": "[concat('MASTER_NODE=true APISERVER_PRIVATE_KEY=',variables('apiServerPrivateKey'),' CA_CERTIFICATE=',variables('caCertificate'),' CA_PRIVATE_KEY=',variables('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',variables('kubeConfigCertificate'),' KUBECONFIG_KEY=',variables('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',variables('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',variables('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',variables('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',variables('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ADMINUSER=',variables('username'))]",
    "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "registerWithTaints": "node-role.kubernetes.io/master=true:NoSchedule",
    "resourceGroup": "[resourceGroup().name]",
    "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
    "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
    "scope": "[resourceGroup().id]",
    "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
    "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
    "singleQuote": "'",
    "sshKeyPath": "[concat('/home/',variables('username'),'/.ssh/authorized_keys')]",
    "sshNatPorts": [
      22,
      2201,
      2202,
      2203,
      2204
    ],
    "sshPublicKeyData": "[parameters('sshRSAPublicKey')]",
    "storageAccountBaseName": "[uniqueString(concat(variables('masterFqdnPrefix'),variables('location')))]",
    "storageAccountPrefixes": [
      "0",
      "6",
      "c",
      "i",
      "o",
      "u",
      "1",
      "7",
      "d",
      "j",
      "p",
      "v",
      "2",
      "8",
      "e",
      "k",
      "q",
      "w",
      "3",
      "9",
      "f",
      "l",
      "r",
      "x",
      "4",
      "a",
      "g",
      "m",
      "s",
      "y",
      "5",
      "b",
      "h",
      "n",
      "t",
      "z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "subnet": "[parameters('masterSubnet')]",
    "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
    "subscriptionId": "[subscription().subscriptionId]",
    "targetEnvironment": "[parameters('targetEnvironment')]",
    "tenantId": "[subscription().tenantId]",
    "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
    "useInstanceMetadata": "true",
    "useManagedIdentityExtension": "false",
    "username": "[parameters('linuxAdminUsername')]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "virtualNetworkResourceGroupName": "''",
    "vmSizesMap": {
      "Standard_A0": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A10": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A1_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A9": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_B1ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B1s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B2ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B4ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B8ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D15_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D16_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D1_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D32_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D3_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D5_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D5_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D64_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D64s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D8_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13-2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13-4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14-4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14-8_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS15_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS1_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E16_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E2_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E2s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32-16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32-8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E4_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E4s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64-16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64-32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E64s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E8_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F16s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F1s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F32s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F64s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F72s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_G1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_GS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4-4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4-8": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5-16": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5-8": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_H16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16mr": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_L16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L32s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128-32ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128-64ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64-16ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64-32ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC12s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC12s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24rs_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24rs_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC6s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC6s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND12s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND24rs": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND24s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND6s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NV12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV6": {
        "storageAccountType": "Standard_LRS"
      }
    },
    "vmsPerStorageAccount": 20,
    "vnetCidr": "[parameters('vnetCidr')]",
    "vnetCniLinuxPluginsURL": "[parameters('vnetCniLinuxPluginsURL')]",
    "vnetCniWindowsPluginsURL": "[parameters('vnetCniWindowsPluginsURL')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "vnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "primary": true,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpool1StorageAccountsCount')]",
        "name": "loop"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpool1VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpool1AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpool1AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpool1AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpool1VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('username')]",
          "computername": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: \"/etc/systemd/system/kubectl-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=Kubectl extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/kubectldir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/kubectldir:/opt/kubectldir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/kubectldir/\"\n\n    ExecStartPre=/bin/mv /tmp/kubectldir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=false --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable= --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=Accelerators=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.0.0.0/8 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    DOCKER_OPTS=\n    KUBELET_OPTS=\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=kubernetes.io/role=agent,agentpool=agentpool1,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n    KUBELET_NON_MASQUERADE_CIDR=',variables('kubernetesNonMasqueradeCidr'),'\n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xUTXPiOBO++1d0kRze9yC0JKndWU/5QIInS+VrFpOaQ5KihN0YFbLskVow7A7/fcsfIWBIai4u9dP9PP3hlp4etaQXb4A2NrIgmevgxk1RIXkj/O6kQRskebxA07VoljJGrz8jNG3Qe4rq04s3QkvCUCDUSqytF+qlNLnOUNMXqTDgSDFPcCacIr5ockUujtHa8IekiAQ5G/Quzr3wB8ZRqfXVYMCnUvOpsHPgeUFc/OMM8jjXJKRGY1+lunZ+hJctEmmAFcCXwnAlp9vMvxIba/leLSyGjpzBE5z+L8udJvgJqcECnjvtTM8d+AmrGJj6PzCF8Bu8wGegOWqo01Z0xqZSJwdlHgKfYSY7x6pvZDKxQGbnwuChmncC47m0IC0IKIQhKRSscrMQJnc6AcqBSr8rLBkUGZQrYTQSlhzr0PdOAOZEhfU5TyXN3bQb51mlX8ftHiuK5Re9P3u/n1RGnGflPrDz3tnF2ac/znutRmzZiV3bmBSwFWikriyWF12Ki4lBMhLtWfBpn8RqFk5JTBVaYARalJNQ0tLRUFl8HBpwZ0011HrZwTgNzx4AYxopmOeWGrOQyZ5p5FIqTDFpAJM1h2WuXIYBT3Dpl58WbNfWrz4mb3nKP2ic9rcHszoS0Swr93et90Prtnaia+AD7bfr5h8B3yc2i7fDahC/WdEjtDz1t4cD4fIR2VkxvwUcDtCa5T5hHygJp4OHq5twNHn4Oo7e6WMlRIqa+J3QIsVkmKAmSWsWIZHUqfV/PfKgwlZLNVwol0pt2/21vM14AE7/vXm8DG/D8WR4178ONw0MwOfrAk0pAK8vyKurWtD6rWelL871TKZ7btTlRWHlY49mz6PzBJkSU1Q26Lxlv38YhJPb/mV4G206e4RlcNYS0CwT9rtDIxJksUxMsKtzP7nrR38/hqP+IJxcDQejzb5cNQdWD4Il0nw8xx3u6WuOq4f7L8PrN3v7+5u4bTGj8HoYjcNR1d3mmOPbcPzXZNwf3o+jjec9DbUlodSL901owuRyHWROkWTOoumSMCmS918AAAD//6H06HKBBwAA\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n\n    exit 0\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n\nruncmd:\n- echo `date`,`hostname`, startruncmd>>/opt/m\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- retrycmd_if_failure() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; echo Executed \\\"$@\\\" $i times; }\n- retrycmd_if_failure_no_stats() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; }\n- apt_get_update() { for i in $(seq 1 20); do apt-get update 2>&1 | grep -x \"[WE]:.*\"; [ $? -ne 0  ] && break || sleep 1; done; echo Executed apt-get update $i times; }\n- retrycmd_if_failure 120 1 nc -zuw1 $(grep nameserver /etc/resolv.conf | cut -d \\  -f 2) 53\n- retrycmd_if_failure 120 1 nc -zw1 aptdocker.azureedge.net 443\n- apt-mark hold walinuxagent\n- echo `date`,`hostname`, preaptupdate>>/opt/m\n- apt_get_update\n- echo `date`,`hostname`, postaptupdate>>/opt/m\n- retrycmd_if_failure 5 10 apt-get install -y apt-transport-https ca-certificates nfs-common\n- echo `date`,`hostname`, aptinstall>>/opt/m\n- systemctl enable rpcbind\n- systemctl enable rpc-statd\n- systemctl start rpcbind\n- systemctl start rpc-statd\n- echo `date`,`hostname`, predockerinstall>>/opt/m\n- retrycmd_if_failure_no_stats 180 1 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 5 10 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- systemctl daemon-reload\n- echo `date`,`hostname`, postdockerinstall>>/opt/m\n- systemctl restart docker\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n\n- echo `date`,`hostname`, PRE-APT-SYSTEMD-DAILY>>/opt/m\n- /usr/lib/apt/apt.systemd.daily\n- echo `date`,`hostname`, POST-APT-SYSTEMD-DAILY>>/opt/m\n- apt-mark unhold walinuxagent\n- mkdir -p /opt/azure/containers && touch /opt/azure/containers/runcmd.complete\n- echo `date`,`hostname`, endruncmd>>/opt/m\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('agentpool1osImageOffer')]",
            "publisher": "[variables('agentpool1osImagePublisher')]",
            "sku": "[variables('agentpool1osImageSKU')]",
            "version": "[variables('agentpool1osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat(variables('generatorCode'), '-', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "agentpool1",
        "resourceNameSuffix": "[variables('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'/cse', copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {
        "managed": "true",
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "3"
      },
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetCidr')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnet')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('nsgName')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22-22",
              "direction": "Inbound",
              "priority": 101,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allow_kube_tls",
            "properties": {
              "access": "Allow",
              "description": "Allow kube-apiserver (tls) traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443-443",
              "direction": "Inbound",
              "priority": 100,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 443,
              "protocol": "tcp"
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterFqdnPrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "masterLbLoopNode"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "backendPort": 22,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "[variables('sshNatPorts')[copyIndex(variables('masterOffset'))]]",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                }
              ],
              "primary": true,
              "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('username')]",
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
          "customData": "[base64(concat('#cloud-config\n\n\npackages:\n - jq\n - traceroute\n\n\nwrite_files:\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SSQY/bIBCF7/kViDtC7RE1PbeHbVdaqfcxTGwUGBCMvfK/r0ideNdJat94b96H5wnI/g+W6hMZIacv8nD25IyQr8nJQ0QGBwzmIARBRCPkeexQVTugGwMWuRg1g13duTLGZgXoMNSWFoI9FiNsIi4pqByA8KLbFHMiJDbiM/tQM9qWHVLlX8jvqZyN4DK2XOOAJywLXT3/v/b5CH1zvzW7EDLWH3PG0o5vGe3366BNMQI5sxwbWOrhOio/yneXXFSl2qBNdPL9UU9QdPCdblpA1qu3CQUEh0VhQMvHtuPGzyWdfPDUH08Q6tadjl+vypTCGPEljcT14xZLPchWrR2sGCFii7wCD0ZIjWz1o7EbZ4Kigu/UsthT0KaAe1Ksfi/7DtAjsX4Bgh7dT4fEnmf1hsye+k9bFAT3m8J8eyj/+ti+ksc1tId2ufwGzP/pY6+L57SHpdwXsg/Yb+ZvAAAA///Or4sP3wMAAA==\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySMa+bMBDHdz7FyXMR6mpVb3lLO7z2SZG6RB0OcyVW7LNlH0R8+8oJ0LQhpWyY3/2O+58x2u+Usg2sQY0fVXW23GlQ76FTlSfBDgV1BcDoSYM6Dy3VJrCk4Byl2iNjT0nNRI5oVixPWciXTw5bcrloAMRS0jAr6uiQ6Xpugo+BiUXDkyZVjmSK5BSyfCW5hHTWIGkogoKjZUpzm/o//rg81mNfsE+FS0xC+fMUKZXXQyTzsoAmeI8lm6NqTguhPoDacP+YazD1WcPxzv26wm839jXwT9u/LBVjcIOntzCwZA3z4d00JKb+bVMrAOBLzTvKSYNqSEyzha2eEVPtbHt1OZKnohFT42zbPHCLyWe7V3tB7ImluU3cfemIxcpUH0jEcv/HFImw+8ZuWvd6C+TvpW7HUO7FtfkqjP/IYy+L57bNUB4D2RfsJ/MrAAD//wNK99agAwAA\n\n- path: /etc/kubernetes/manifests/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7RVwY7jNgy95ysI51Cg2HiwtyK3aQsUBabbRbrTHoo5KBJjC1FIV6ST8d8Xkhw7mWSAHqY3JabI954eSdP5PzGKZ1qD6Z3Xev+D1J4fjp+3qOYzLOFb6wW8QMR/eh/R1Yu9J7eGrxy8HRZL+JnpO4UGCaNRLGkAj0gqsOMIJoR8GUUFPMGmnDdo0R/RgahpsF7wwesf6SjrBcAKqjdx1SL2oXxcwhM30LED2xpqUMDonFY6JkEIeMSQM+XT+m3AAgAgonAfbUmbYpvIfbeGqsq/U6nNGAJVx04qcIySCB+M2nYmpgyGBpB+e84JvEsY5dOU6tR62yYtLZN4USSFk9cWtEXY/Pj4E3RZ1Hq8MaODv0v1l8VEP//xELipPo1nUaO9VEmM31CNM2puVTh/+W/0bxDcKziCKj4I3MDpWprtkAlWMojiYb3vt7jqIr8OFTABkuvYJ7NwBMF49BblEvEXpvJYvWDMQG4TveSAI8ZtDsgAxj/f5whLsBwRHr/+Wv68R3qCl1if4d1SNr22SOqtUXRXrrAY1XgCYlpN1njePEFntJX6Xaa/JESXdK9KjOSI6ezP583TRLF6MJ3/PhH8ywdnTXTFrp6aego5lsavZkulVxqhw5bdkBxsmXa+OZhu6jVPkJUvsOo7LfYRuk91ZaQ6TqI0BIApDGC6LnjMGk83E7jstQuEFZA5oHTGYj1lQsBDpwOIRk9NAmUNwRaT9C6lFAxoNb/adN3NhUqm6UuGfFnzolHvyipoI+pZ0/9LxFLlamykaczaYrwWLecy5ABfFSn5Ig/VPJhG6BnehyGdA+aKKXRcR0mjHADSch8cfPn9W3oeTzb0Lm2hzOgRbPL1Ku+Y5Azl0o4XLMdWHNlcT8b63dGY1KJmFXuiZJApTfB7LAMuWa81CrtUrCeHEXRy6MmHAMQ65pq3I10uyDvrsBjrehmOHXuzEP8NAAD//+gVlJa+BwAA\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRQWvjMBCF7/4VQuc1Zq9iCSy9NIe0gUAvoYexPHVEpJGQxg7+90Wu7TRt0tQ36733afQGgnnBmIwnJWT/VxZHQ40ScusbWThkaIBBFUIQOFRCHrsaSwgmYewxyklIAfSipiExuixZqNGmnBaCDUYltCeO3pbBAuF4rr0LnpBYiUt2kQLqnD34xE/IJx+PSnDsci5zwBDGiV7eni9/xkGb1X9ZjoSM6XEIGPPvLqBezUbtnYNcwF5Wh9kh/wh5Rr5OVohtUmL/Cfl/u96NngdPb6Zdzc7e287hxnfE07gXIyPr8gyRi0EIlyNb4IMSskLW1TXbwukhltbUI8si3wT1ECtr6uqbbyG5ZO6mTwAtElcbIGixWTdIbHgod8hsqL14R0RonskOy/o+Gvm6u+tF5PWPly/A8EMj99q4Tbtay4xzyfwacL+Z9wAAAP//THO1tHUDAAA=\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRsW7zMAyEdz8Fkd3w/w9ZhKJAxw5pAwTozkiEIySiXJFy4LcvZMdOWjRtR5LH43cSdv6NkvjIBvr/1dGzM7CNrgqk6FDRVACMgQwc855qdC5yHZCxpXQZSYd2nssgSqEC6G9cpSNbfA5R9IX0HNPRgKZMFYCNrOiZkhRF/dMtAB+wJQMPZZyYlOSpaDaTZNeRfRx1iSTmZGn0nBrvmUSXGsB22cA6LHWgENNgYP1v48dmH0850CZmntdmuJFLLpuhCLaoBwOrhtQ2V7ZmEq4WBnSvfBqW6FfHIP47ux5Tc/L75ozYEmsz5XTPjli9DvWOVD239y9MGT697A18+Y7x1GW9+y3FV9x7Bn/n/ggAAP//ovMbJ38CAAA=\n\n\n\n- path: /etc/kubernetes/addons/kube-heapster-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWW2tjNxB+P79C+F1ep92AK+pCmk3bh2Y3JFAoLISxNOujWrfq4rX31xfpHNvnYgcTNlC9WGdGo2/mm4sMTv6FPkhrGNlcVWtpBCNP6DeS4w3nNplYaYwgIAKrCDGgkZEawYWIvhUEBxwZWacl0rALEXVFiIIlqpBtSNF4gxHDVNp3XKVsTEMDw8gk+oSTchKEsEaDgRX6ad9MW4GMPCK3hkuFFaW06rrvl8CnkGJtvfwGUVozXc+L5eZqiRH20d028I9W4YnQGv/ZPkL6VcaaGjBm93Yx3ZmQPN5tZYih8klhYBUl4OTv3iZX8CjBbUSTIw3lE5zLG4/BJs+xPSTQKbvTaGJWbtAvW8UKY/lVMjSbrxB5XXbJCYhYtq4IR9CTyRgJNy0IPZZA+2lFu3NWXObGd0jlr9IIaVb/y4xahY/4JYPsiX0hxIqQcZ1eEEtIy3+Qx1I6J9v48uYdpmM4GHokv47B/snGsT/6jl3iaXDIM7SzPrYllreMzGcFJoJfYXxoRfMfKkICKuTR+tbjeaDgXAcrB99E++HQTD02jo14qMazfIxuf8s6e2EYD/jc0+bRKckhMHI1YkbnzvyzE8zpcCJqpyBia9QhIi/Vsz9HCCFgjI2lCzqHA69RJIV+CsrVMCCAexklB0WdFawZUYTsAyu5twp9/05K1rhj5LY1vcn0hk9G7Q6Y1mUb6xk5kFru7bXSx2F15sWtiSAN+g6a1LBCRn4+er6v8SeH/JcDKrdagxHH0CmZvNvfP+lKKW2m8KJDRkhag989g5Ps8+Tz5GgwaqNm9Ub5UfhvwhB7MkK4S7lzdE+oUVu/Y+Tq/exedjRKavnqC06xVRL0iEF+u4gxZ8VzGYYDyrhLi/lMD6S4jR6Kbja9HiobDxfFwZN27YH3I3WsPYbaKrG4HmiOj/PiTG4PNXTugLNKUYdeWrH4cZbX0LkQpc4FvMCtswZNlKDOFcThFXxdWVyfyepPF1bFRfZoNt0kb0Al/M1b3b/vi0Ql2jd2JH+AWLPDaJpmDjrHGkru/35++PTh+ePN/d33Rysj+SXIp4eb2z1u/vv01JvEeeV3ZjAAbWBESZO21X8BAAD//0SxZ2rFCwAA\n\n- path: /etc/kubernetes/addons/kube-dns-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xYS2/jNhC++1cQ7ll+JMhuINQBgnXQDbZJjTrtfUKOJcIUyfDhxvvrC0qyLEq2Y+dQ1DdxXh/nm4dk0PxvNJYrmZLNdLDmkqVkiWbDKd5Tqrx0gwIdMHCQDgiRUGBK1v4VEyZtfWA10N2p3VqHxYAQAa8obLAhpcRIdGhHXI2p8NahSWwVJiVDZzwOS01gTMkCJGRoRrFZoRim5E+kSlIucJAkyeAU/Ah3hObWJqB1dI1LMMaaVUZ++FecPy8vyJDVSAOeOtLjIiW/risv9QUeF3cDQrQyrgSe1K53gIMgJTfX1YNRTlElUvLXfBErJ47qUwYv34KBRYHUKXMsRd1sg9Z2vJm+ooNd3ueohdoW2CmZzxXCYZI2DdlXk16uk/3hiXwb1IJTsCm56l27AEfz31t4j+HoIXFYaAEOaz+t65dVLaVy4LiSjV9CLM2ReYFmBELn0Kl2arjjFESiFUvJcFibiQjccXiXpPrAdQjZpauEv1pxyd12H1Yrdi8dv+8JQmHhCo1BNveGy2xZ3ZLL7DGTqjl+eEfqQ0Lapgn5B3mWu5RMJ5PWeRWvjvWCpkgjYZ2VZURl+1fS+vCuDVobc7CPvMZtustmT0yI0mggOCeP8oB4A8LjAb+l5y4z1c8prYTKtj/KwBFZubIuVPFgpylC8DbyGu+3ukjuw9S0f0ixHfQBP7xz65qyVcIX2PLTaSGq5IpnjZfq8Ql0+2q9CbePGUCCSEkorkHjwgGXaFpBwWStZCVkmCRMFcDlrK7TkVAUxGjY0ZE2CUNsNp1Mbq47ws3sqnNSgU8YN7Nx54J7TV5AhvXorRioR/lSI71r1ATfoERrF0a9YjsZK+DCG3zJDdpcCZaSm5Y0d07/hi4uDA0uT8lwnCMIl/9MQmgm7bBT8WFY305u40YIQyNk//vLy6IlCJ3BQcxRwHYZNiSzKfnSNrWeUrS2hXPakjpeoPKuMd3fYU92m+tmKe3S3bC8KHGXBPVKJuS/JDYaF/Hiutiho/qE02q5VT+DwPhBEk/S1JgdIWj6aYKuJ2dRYNAqb2g8XwQvuOtMnAILZbYpmX6dPPGWxOCbR9vVptqXeS0O+ohcVFPjKbwNRqyfHh6EFMFiUeax24EnZkGvk4XKnLKOoTGxoHI1P9ngQc+gdWDcXNoC7NssXn3lrIgf191JAjTHxPKfGEbPpCOVKgRQYtM5D7sWzWx69XU0GU1G018Oja1aacxlAoyZERgN4zNN9Jdz1IXKkhVQLrjbzpJTk2/+vHwC+xZPvqbTQurOHgCHm/Xyvj/e9B+2+7Gi/bgoSW/JfVy0CS3YTFqh1Nrr9j5nuAIv3Mhu6CjabqShjdyNGW7G0gvR4c4bMWv2RM1BtzY/Hzcty+XM6L0tVaqU6zhsqc75m+foTtVaeAH8Xrn+7zZtL4Pkf7dpa6hnN1oH97HNd+EGublggRzeHy0PTNqFEpxuwydiWZS1wEb/Mzwfeq2UimH/xT58dXa+l5RNieDSvw/+DQAA//9hDItW0xAAAA==\n\n- path: /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUy27bMBC8+ysI3RklVyEuULgBemkawEDva2psE+ZDWS5d++8LSrUtOYmb8kTMLoczswSps7/AycbQKBwEoWxTvX9YQehhtrOhbdQ3go9hCZl5CLUk1MyUcrSCS2Wn1C6vwAGCdGdjbVxOAtYJvLcGjaqEM6q+00TfxYAgTX9IdxwPx74iFtyoEFvMlArkcdVRoNSROeHpmAR+ljqYIkLgO0eCQdBYaFljsbdlvJGi1OmKvhQdmKSkdIK02uE4tGuODnfTNDyVMM7csSvnIzfq6TWTO+N7cnkaVVlYr2GkUc9xabZos8PsZCAI2QAeyTDRewrtxaVWVb09duCiqBrBU7taVVqXFhPD2m7m9Z64dnZVF8xB6kutmh46TdrYluePpW0xIAvb8per5jVIMkNvSJDmT4cObD2CkFuwFWvIvcT2awhR+nzn0ySsp03J5/GS7veTtWUHM7rtncczLEaKmQ1GD6GArxlJJphSpsuNeri/92c0wWS2clzEIDjIuL1ju7cOG7SNKqovQ40ue/yIOYz5tfIFeSHZNqqqIaZOydUGLKka0Q4+UnK6L+ltTDIRTu3P4I5Xd77DfonsLT3E6Ev9v+k/81TGExlq/7qmOH2G/I68m+BDnqMnXxp7KeNp/JWWE9dpS4zaUJ+gXVtDkxBuJHyb+zO2PzB9m/ijcd0YVvl4lnAw5Vc5Hygf+NVPFFOjnA35MPsTAAD//zcsf+33BQAA\n\n- path: /etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xVS2/jNhC+61cMfKe9we7BINoFtjGwPSSBYKe9j6mJxZqvkiM3atH/XlB+SY7jOEUDlCdhnt9885HCoH+lmLR3EjY3xVq7SsKC4kYr+qaUbxwXlhgrZJQFgMElmZS/ANbTJDAECetmSdERUxIVpnrpMVbbiINjrP1EmSYxRZG25SWMODY06iKxqryz6HBFcTxMs74iCXNS3iltqABwaOnVrtmZAqpdhEhtYrKFEKLoDxuXqMbYcO2j/hNZezdeT7t+m5slMe65uN2CnntDP2lXabca8HERyv+ArOgNzekpY8Cgv0ffhAuzFwAvpj4MuUeEldWuSM3yN1KcZCHgrGr+mzWdavJ1MV7N3lub+DewUyCVcQQfuQMkuk8JX7587poyxhVx2dmmW2MiQ4p9vE4f3AaS8OArykVe8ETPTC5/phP9zigY31q6dI8/5pZ+LNORgtEKk4SbF1xaZFXf9Sa8gl6ywSDTrkCPqXzMoNY1l3kPMx/lHaN2FA8VBGBcJQmHggKEwIa9WJGjiExCUWT9pBUypUFYTRi6BdU+8Y81c5CTyd447lElp58OidriiiT8cMQ728NdBFJfh4FlY0zpjVathG/mD2yPCIzekKOUyuiXdCQEIAP5Ttw3AQTkWsJoMhpa+7fgeJKqKevh58fHctHzaKdZo5mRwXaR9VUlCZ8/9SJYW/INn3NelNgRTm+34riv8hzQED175Y2Ex9vyYI+UfBMVpT4BkX5vKHEakqJCc34Tt+Uv813G10GGJetjez7pvvOdyzPa6vf0vsvx7218krTxprF0n38A/c7iwh46pad+W5vTy046k75zW3ywqneUJRu4neko4a+/d+Y0+GM9vCUV5ytaDB6afPJje/IW+iTBaNc8F/8EAAD//wWYXGxfCQAA\n\n- path: /etc/kubernetes/addons/azure-storage-classes.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8yQT0sDMRDF7/kUQ+9Z6U1y9aoiFrzKdDMtYfNnmZkU9NPLZuvCavFkxXPy3rzfD8fwQiyhZAeihfFI3XArXSg3p+2eFLdmCNk72M2PdxFFTCJFj4rOAGRM5MDTAWtUA4A5F0UNJcv0DJ+1/ZTspspuqHviTErtThB7Ttv2x8FGudLGAETcUzzXrEN9rKLEVohPoaclM3I5hQmH2H2J4Htlsj7IYKy15rfIE2Y8krcjUwo1fTdwLYgRGRMpceuetz7MY8xiHfu+1Kz6NpKDp3ni6/3z7ioKRDF7ZP+fHezOGxcJFwh/9HKBvw06hEh/At4OrcFlqI9tyYruIwAA//+8TAl83AMAAA==\n\n- path: /etc/kubernetes/addons/kube-tiller-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RUXWvbShB9169Y/C4Hc3PhslwCbmKSQJwaOy3tUxivpvY2+9WdWWP31xcpsaKvhuQhhepJu3uOzjkzo4WgP2Mk7Z0Uu0n2oF0hxQrjTiucKuWT48wiQwEMMhPCgUUpWBuD8WlJARRK8ZDWmNOBGG0mhIE1GioZojqJDhlprP2JMokYY06PIlKMOCYcVUgoCu8sONhgHLdp1hclduYoRZztNTGNsjzPs2aCuAY1hsRbH/VPYO3d+OG/ir6brJHhGPD80cPSG/ygXaHd5qWQfyZL9AaX+K2UgaAvo0/hhUCZEL0otfOjLSisdhml9XdUTDLLxWB/X9vVbrW789KqYbNoEIIUWzS2WnXE3rOmbbG8wGD84fcBKaAqHQcfubKe982WZ1Kcnk7+Oa3WDHGDvKh2axihQcU+viI+HwLWXbxe9IqMe0ZXvlJnhi+qMBY7P+jfXHdGGwwwPrpvpiqfZrJ+usGExw9X762hv+1ChVDeMWiHsdbIBbrds+BxGu6ub25my/vb6Xy2WkzPZzVAiB2Y1LsLB9lX16u7j8uv9/Pplz5/9P9zke8qj3PYX2liHw9noxqvLWxQih54FVCd1Sijd+iQaBH9GmVDbMscLpGbW0IE4K0UJ0dS+6ye/X8b+9pp1mAu0MBhhcq7gqSYNACsLfrEA2e9hh1VqFn1ujGLzr/3wkciQqHfnLpmvW/siORTVEhNExF/JCSmtjEV0kCDzxeflk/wsxbcovXxMMCYVwdDJKOtfrXqTQl+k2SL4XyBq9bdWD7lrda5VTxJYbRL++xXAAAA//9fQ5xvoQgAAA==\n\n\n\n- path: \"/etc/systemd/system/kubectl-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=Kubectl extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/kubectldir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/kubectldir:/opt/kubectldir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/kubectldir/\"\n\n    ExecStartPre=/bin/mv /tmp/kubectldir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=false --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable= --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates= --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.0.0.0/8 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    DOCKER_OPTS=\n    KUBELET_OPTS=\n    KUBELET_NODE_LABELS=kubernetes.io/role=master,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n  \n    KUBELET_NON_MASQUERADE_CIDR=',variables('kubernetesNonMasqueradeCidr'),'\n    KUBELET_REGISTER_NODE=--register-node=true\n    KUBELET_REGISTER_WITH_TAINTS=--register-with-taints=',variables('registerWithTaints'),'\n  \n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xUTXPiOBO++1d0kRze9yC0JKndWU/5QIInS+VrFpOaQ5KihN0YFbLskVow7A7/fcsfIWBIai4u9dP9PP3hlp4etaQXb4A2NrIgmevgxk1RIXkj/O6kQRskebxA07VoljJGrz8jNG3Qe4rq04s3QkvCUCDUSqytF+qlNLnOUNMXqTDgSDFPcCacIr5ockUujtHa8IekiAQ5G/Quzr3wB8ZRqfXVYMCnUvOpsHPgeUFc/OMM8jjXJKRGY1+lunZ+hJctEmmAFcCXwnAlp9vMvxIba/leLSyGjpzBE5z+L8udJvgJqcECnjvtTM8d+AmrGJj6PzCF8Bu8wGegOWqo01Z0xqZSJwdlHgKfYSY7x6pvZDKxQGbnwuChmncC47m0IC0IKIQhKRSscrMQJnc6AcqBSr8rLBkUGZQrYTQSlhzr0PdOAOZEhfU5TyXN3bQb51mlX8ftHiuK5Re9P3u/n1RGnGflPrDz3tnF2ac/znutRmzZiV3bmBSwFWikriyWF12Ki4lBMhLtWfBpn8RqFk5JTBVaYARalJNQ0tLRUFl8HBpwZ0011HrZwTgNzx4AYxopmOeWGrOQyZ5p5FIqTDFpAJM1h2WuXIYBT3Dpl58WbNfWrz4mb3nKP2ic9rcHszoS0Swr93et90Prtnaia+AD7bfr5h8B3yc2i7fDahC/WdEjtDz1t4cD4fIR2VkxvwUcDtCa5T5hHygJp4OHq5twNHn4Oo7e6WMlRIqa+J3QIsVkmKAmSWsWIZHUqfV/PfKgwlZLNVwol0pt2/21vM14AE7/vXm8DG/D8WR4178ONw0MwOfrAk0pAK8vyKurWtD6rWelL871TKZ7btTlRWHlY49mz6PzBJkSU1Q26Lxlv38YhJPb/mV4G206e4RlcNYS0CwT9rtDIxJksUxMsKtzP7nrR38/hqP+IJxcDQejzb5cNQdWD4Il0nw8xx3u6WuOq4f7L8PrN3v7+5u4bTGj8HoYjcNR1d3mmOPbcPzXZNwf3o+jjec9DbUlodSL901owuRyHWROkWTOoumSMCmS918AAAD//6H06HKBBwAA\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -e\n\n\n\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n    sed -i \"s|<kubernetesAddonManagerSpec>|',variables('kubernetesAddonManagerSpec'),'|g\" \"/etc/kubernetes/manifests/kube-addon-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g; s|<kubeClusterCidr>|',variables('kubeClusterCidr'),'|g\" \"/etc/kubernetes/addons/kube-proxy-daemonset.yaml\"\n    sed -i \"s|<kubernetesKubeDNSSpec>|',variables('kubernetesKubeDNSSpec'),'|g; s|<kubernetesDNSMasqSpec>|',variables('kubernetesDNSMasqSpec'),'|g; s|<kubernetesExecHealthzSpec>|',variables('kubernetesExecHealthzSpec'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n    sed -i \"s|<kubernetesHeapsterSpec>|',variables('kubernetesHeapsterSpec'),'|g; s|<kubernetesAddonResizerSpec>|',variables('kubernetesAddonResizerSpec'),'|g\" \"/etc/kubernetes/addons/kube-heapster-deployment.yaml\"\n    sed -i \"s|<kubeDNSServiceIP>|',variables('kubeDNSServiceIP'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n\n\n    sed -i \"s|<kubernetesDashboardSpec>|',variables('kubernetesDashboardSpec'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPURequests>|',variables('kubernetesDashboardCPURequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryRequests>|',variables('kubernetesDashboardMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPULimit>|',variables('kubernetesDashboardCPULimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryLimit>|',variables('kubernetesDashboardMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n\n\n\n    sed -i \"s|<kubernetesTillerSpec>|',variables('kubernetesTillerSpec'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPURequests>|',variables('kubernetesTillerCPURequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryRequests>|',variables('kubernetesTillerMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPULimit>|',variables('kubernetesTillerCPULimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryLimit>|',variables('kubernetesTillerMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMaxHistory>|',variables('kubernetesTillerMaxHistory'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n\n\n\n\n\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesControllerManagerConfig>|\\\"--allocate-node-cidrs=false\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--cluster-cidr=10.240.0.0/12\\\", \\\"--cluster-name=architech-k8s\\\", \\\"--cluster-signing-cert-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cluster-signing-key-file=/etc/kubernetes/certs/ca.key\\\", \\\"--feature-gates=ServiceNodeExclusion=true\\\", \\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--node-monitor-grace-period=40s\\\", \\\"--pod-eviction-timeout=5m0s\\\", \\\"--profiling=false\\\", \\\"--root-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--route-reconciliation-period=10s\\\", \\\"--service-account-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--terminated-pod-gc-threshold=5000\\\", \\\"--use-service-account-credentials=true\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesAPIServerConfig>|\\\"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,AlwaysPullImages\\\", \\\"--advertise-address=<kubernetesAPIServerIP>\\\", \\\"--allow-privileged=true\\\", \\\"--anonymous-auth=false\\\", \\\"--audit-log-maxage=30\\\", \\\"--audit-log-maxbackup=10\\\", \\\"--audit-log-maxsize=100\\\", \\\"--audit-log-path=/var/log/audit.log\\\", \\\"--audit-policy-file=/etc/kubernetes/manifests/audit-policy.yaml\\\", \\\"--authorization-mode=Node,RBAC\\\", \\\"--bind-address=0.0.0.0\\\", \\\"--client-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--etcd-cafile=/etc/kubernetes/certs/ca.crt\\\", \\\"--etcd-certfile=/etc/kubernetes/certs/etcdclient.crt\\\", \\\"--etcd-keyfile=/etc/kubernetes/certs/etcdclient.key\\\", \\\"--etcd-quorum-read=true\\\", \\\"--etcd-servers=https://127.0.0.1:2379\\\", \\\"--insecure-port=8080\\\", \\\"--kubelet-client-certificate=/etc/kubernetes/certs/client.crt\\\", \\\"--kubelet-client-key=/etc/kubernetes/certs/client.key\\\", \\\"--profiling=false\\\", \\\"--repair-malformed-updates=false\\\", \\\"--secure-port=443\\\", \\\"--service-account-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--service-account-lookup=true\\\", \\\"--service-cluster-ip-range=10.0.0.0/16\\\", \\\"--storage-backend=etcd3\\\", \\\"--tls-cert-file=/etc/kubernetes/certs/apiserver.crt\\\", \\\"--tls-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--v=4\\\"|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesAPIServerIP>|',variables('kubernetesAPIServerIP'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n- path: \"/opt/azure/containers/mountetcd.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('mountetcdScript'),'\n\n- path: \"/etc/systemd/system/etcd.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=etcd - highly-available key value store\n    Documentation=https://github.com/coreos/etcd\n    Documentation=man:etcd\n    After=network.target\n    Wants=network-online.target\n    [Service]\n    Environment=DAEMON_ARGS=\n    Environment=ETCD_NAME=%H\n    Environment=ETCD_DATA_DIR=\n    EnvironmentFile=-/etc/default/%p\n    Type=notify\n    User=etcd\n    PermissionsStartOnly=true\n    ExecStart=/usr/bin/etcd $DAEMON_ARGS\n    Restart=always\n    [Install]\n    WantedBy=multi-user.target\n    Alias=etcd.service\n\n- path: \"/opt/azure/containers/setup-etcd.sh\"\n  permissions: \"0744\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -x\n    retrycmd_if_failure() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; echo Executed \\\"$@\\\" $i times; }\n    ETCD_VER=v',variables('etcdVersion'),'\n    DOWNLOAD_URL=',variables('etcdDownloadURLBase'),'\n    retrycmd_if_failure 5 5 curl --retry 5 --retry-delay 10 --retry-max-time 30 -L ${DOWNLOAD_URL}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz\n    tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /usr/bin/ --strip-components=1\n    systemctl daemon-reload\n    systemctl enable etcd.service\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n\n\nruncmd:\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- retrycmd_if_failure() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; echo Executed \\\"$@\\\" $i times; }\n- retrycmd_if_failure_no_stats() { retries=$1; wait=$2; shift && shift; for i in $(seq 1 $retries); do ${@}; [ $? -eq 0  ] && break || sleep $wait; done; }\n- ensure_etcd_ready() { for i in $(seq 1 1800); do if [ -e /opt/azure/containers/certs.ready ]; then break; fi; sleep 1; done }\n- apt_get_update() { for i in $(seq 1 20); do apt-get update 2>&1 | grep -x \"[WE]:.*\"; [ $? -ne 0  ] && break || sleep 1; done; echo Executed apt-get update $i times; }\n- retrycmd_if_failure 120 1 nc -zuw1 $(grep nameserver /etc/resolv.conf | cut -d \\  -f 2) 53\n- retrycmd_if_failure 120 1 nc -zw1 aptdocker.azureedge.net 443\n- ensure_etcd_ready\n- /opt/azure/containers/setup-etcd.sh > /opt/azure/containers/setup-etcd.log 2>&1\n- apt-mark hold walinuxagent \n- /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster \"',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\"\" --initial-cluster-state \"new\" | tee -a /etc/default/etcd\n- /opt/azure/containers/mountetcd.sh\n- /bin/chown -R etcd:etcd /var/lib/etcddisk\n- systemctl stop etcd\n- systemctl daemon-reload\n- systemctl restart etcd\n- MEMBER=\"$(sudo etcdctl member list | grep -E ',variables('masterVMNames')[copyIndex(variables('masterOffset'))],' | cut -d',variables('singleQuote'),':',variables('singleQuote'),' -f 1)\"\n- sudo etcdctl member update ${MEMBER} ',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\n- retrycmd_if_failure 5 5 curl --cacert /etc/kubernetes/certs/ca.crt --cert /etc/kubernetes/certs/etcdclient.crt --key /etc/kubernetes/certs/etcdclient.key --retry 5 --retry-delay 10 --retry-max-time 30 --max-time 60 \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\"/v2/machines\n- apt_get_update\n- retrycmd_if_failure 5 10 apt-get install -y apt-transport-https ca-certificates\n- retrycmd_if_failure_no_stats 180 1 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 5 10 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- systemctl daemon-reload\n- systemctl restart docker\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n- /usr/lib/apt/apt.systemd.daily\n\n- apt-mark unhold walinuxagent\n- touch /opt/azure/containers/runcmd.complete\n\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('sshPublicKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": [
            {
              "createOption": "Empty",
              "diskSizeGB": "[variables('etcdDiskSizeGB')]",
              "lun": 0,
              "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
            }
          ],
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSku')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "creationSource": "[concat(variables('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "master",
        "resourceNameSuffix": "[variables('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', copyIndex(variables('masterOffset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' ',variables('provisionScriptParametersMaster'), ' MASTER_INDEX=',copyIndex(variables('masterOffset')),' /usr/bin/nohup /bin/bash -c \"stat /opt/azure/containers/provision.complete > /dev/null 2>&1 || /bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "agentStorageAccountPrefixes": {
      "type": "array",
      "value": "[variables('storageAccountPrefixes')]"
    },
    "agentStorageAccountSuffix": {
      "type": "string",
      "value": "[variables('storageAccountBaseName')]"
    },
    "agentpool1StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpool1StorageAccountsCount')]"
    },
    "agentpool1StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpool1StorageAccountOffset')]"
    },
    "agentpool1SubnetName": {
      "type": "string",
      "value": "[variables('agentpool1SubnetName')]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "primaryAvailabilitySetName": {
      "type": "string",
      "value": "[variables('primaryAvailabilitySetName')]"
    },
    "resourceGroup": {
      "type": "string",
      "value": "[variables('resourceGroup')]"
    },
    "routeTableName": {
      "type": "string",
      "value": "[variables('routeTableName')]"
    },
    "securityGroupName": {
      "type": "string",
      "value": "[variables('nsgName')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[variables('subnetName')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    }
  }
}
